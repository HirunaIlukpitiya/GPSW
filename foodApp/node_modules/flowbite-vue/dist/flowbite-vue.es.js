import { computed, defineComponent, toRefs, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, inject, ref, useSlots, useAttrs, createBlock, resolveDynamicComponent, withCtx, renderSlot, createCommentVNode, toDisplayString, createTextVNode, Fragment, Comment, toRef, provide, renderList, normalizeProps, guardReactiveProps, withDirectives, vShow, watch, nextTick, getCurrentScope, onScopeDispose, getCurrentInstance, createVNode, Transition, normalizeStyle, pushScopeId, popScopeId, createStaticVNode, h, TransitionGroup, mergeProps, isRef, vModelDynamic } from "vue";
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var classnames = { exports: {} };
/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
(function(module) {
  (function() {
    var hasOwn = {}.hasOwnProperty;
    function classNames2() {
      var classes = [];
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        if (!arg)
          continue;
        var argType = typeof arg;
        if (argType === "string" || argType === "number") {
          classes.push(arg);
        } else if (Array.isArray(arg)) {
          if (arg.length) {
            var inner = classNames2.apply(null, arg);
            if (inner) {
              classes.push(inner);
            }
          }
        } else if (argType === "object") {
          if (arg.toString === Object.prototype.toString) {
            for (var key in arg) {
              if (hasOwn.call(arg, key) && arg[key]) {
                classes.push(key);
              }
            }
          } else {
            classes.push(arg.toString());
          }
        }
      }
      return classes.join(" ");
    }
    if (module.exports) {
      classNames2.default = classNames2;
      module.exports = classNames2;
    } else {
      window.classNames = classNames2;
    }
  })();
})(classnames);
var classNames = classnames.exports;
const sizes = {
  "0": "w-0 h-0",
  "0.5": "w-0.5 h-0.5",
  "1": "w-1 h-1",
  "1.5": "w-1.5 h-1.5",
  "10": "w-10 h-10",
  "11": "w-11 h-11",
  "12": "w-12 h-12",
  "2": "w-2 h-2",
  "2.5": "w-2.5 h-2.5",
  "3": "w-3 h-3",
  "4": "w-4 h-4",
  "5": "w-5 h-5",
  "6": "w-6 h-6",
  "7": "w-7 h-7",
  "8": "w-8 h-8",
  "9": "w-9 h-9",
  px: "w-px h-px"
};
const colors = {
  blue: "fill-blue-600",
  gray: "fill-gray-600 dark:fill-gray-300",
  green: "fill-green-500",
  pink: "fill-pink-600",
  purple: "fill-purple-600",
  red: "fill-red-600",
  yellow: "fill-yellow-400",
  white: "fill-white"
};
function useSpinnerClasses(props) {
  const sizeClasses = computed(() => sizes[props.size.value]);
  const colorClasses = computed(() => colors[props.color.value]);
  const bgColorClasses = computed(() => "text-gray-200 dark:text-gray-600");
  const animateClasses = computed(() => "animate-spin");
  const spinnerClasses = computed(() => {
    return classNames(
      sizeClasses.value,
      bgColorClasses.value,
      colorClasses.value,
      animateClasses.value
    );
  });
  return {
    spinnerClasses
  };
}
const _hoisted_1$p = /* @__PURE__ */ createElementVNode("path", {
  d: "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",
  fill: "currentColor"
}, null, -1);
const _hoisted_2$m = /* @__PURE__ */ createElementVNode("path", {
  d: "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",
  fill: "currentFill"
}, null, -1);
const _hoisted_3$d = [
  _hoisted_1$p,
  _hoisted_2$m
];
const _sfc_main$y = /* @__PURE__ */ defineComponent({
  __name: "Spinner",
  props: {
    size: {
      type: String,
      default: "4"
    },
    color: {
      type: String,
      default: "blue"
    }
  },
  setup(__props) {
    const props = __props;
    const { spinnerClasses } = useSpinnerClasses(toRefs(props));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("svg", {
        role: "status",
        class: normalizeClass(unref(spinnerClasses)),
        viewBox: "0 0 100 101",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, _hoisted_3$d, 2);
    };
  }
});
const FLOWBITE_THEMABLE_INJECTION_KEY = "flowbite-themable-injection-key";
const flowbiteThemeClasses = {
  blue: {
    background: "bg-blue-700 dark:bg-blue-600",
    disabled: "",
    hover: "hover:bg-blue-800 dark:hover:bg-blue-700",
    text: "text-blue-600 dark:text-blue-500",
    border: "border-blue-600 dark:border-blue-500",
    focus: "focus:ring-blue-300 dark:focus:ring-blue-800"
  },
  green: {
    background: "bg-green-700 dark:bg-green-600",
    disabled: "",
    hover: "hover:bg-green-800 dark:hover:bg-green-700",
    text: "text-green-600 dark:text-green-500",
    border: "border-green-600 dark:border-green-500",
    focus: "focus:ring-green-300 dark:focus:ring-green-800"
  },
  pink: {
    background: "bg-pink-700 dark:bg-pink-600",
    disabled: "",
    hover: "hover:bg-pink-800 dark:hover:bg-pink-700",
    text: "text-pink-600 dark:text-pink-500",
    border: "border-pink-600 dark:border-pink-500",
    focus: "focus:ring-pink-300 dark:focus:ring-pink-900"
  },
  purple: {
    background: "bg-purple-700 dark:bg-purple-600",
    disabled: "",
    hover: "hover:bg-purple-800 dark:hover:bg-purple-700",
    text: "text-purple-600 dark:text-purple-500",
    border: "border-purple-600 dark:border-purple-500",
    focus: "focus:ring-purple-300 dark:focus:ring-purple-900"
  },
  red: {
    background: "bg-red-700 dark:bg-red-600",
    disabled: "",
    hover: "hover:bg-red-800 dark:hover:bg-red-700",
    text: "text-red-600 dark:text-red-500",
    border: "border-red-600 dark:border-red-500",
    focus: "focus:ring-red-300 dark:focus:ring-red-900"
  }
};
function useFlowbiteThemable(_theme) {
  const theme = inject(FLOWBITE_THEMABLE_INJECTION_KEY, ref(null));
  const isActive = computed(() => !!(theme == null ? void 0 : theme.value));
  const color = computed(() => (theme == null ? void 0 : theme.value) || void 0);
  const themeName = computed(() => {
    return _theme || theme.value;
  });
  const backgroundClasses = computed(() => {
    if (!themeName.value)
      return "";
    return flowbiteThemeClasses[themeName.value].background;
  });
  const disabledClasses = computed(() => {
    if (!themeName.value)
      return "";
    return flowbiteThemeClasses[themeName.value].disabled;
  });
  const hoverClasses = computed(() => {
    if (!themeName.value)
      return "";
    return flowbiteThemeClasses[themeName.value].hover;
  });
  const textClasses = computed(() => {
    if (!themeName.value)
      return "";
    return flowbiteThemeClasses[themeName.value].text;
  });
  const borderClasses = computed(() => {
    if (!themeName.value)
      return "";
    return flowbiteThemeClasses[themeName.value].border;
  });
  const focusClasses = computed(() => {
    if (!themeName.value)
      return "";
    return flowbiteThemeClasses[themeName.value].focus;
  });
  return {
    backgroundClasses,
    disabledClasses,
    hoverClasses,
    textClasses,
    borderClasses,
    focusClasses,
    isActive,
    color
  };
}
const buttonColorClasses = {
  default: {
    default: "text-white bg-blue-700 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg dark:bg-blue-600 focus:outline-none dark:focus:ring-blue-800",
    blue: "text-white bg-blue-700 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg dark:bg-blue-600 focus:outline-none dark:focus:ring-blue-800",
    alternative: "font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 focus:z-10 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600",
    dark: "text-white bg-gray-800 focus:outline-none focus:ring-4 focus:ring-gray-300 font-medium rounded-lg dark:bg-gray-800 dark:focus:ring-gray-700 dark:border-gray-700",
    light: "text-gray-900 bg-white border border-gray-300 focus:outline-none focus:ring-4 focus:ring-gray-200 font-medium rounded-lg dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:focus:ring-gray-700",
    green: "focus:outline-none text-white bg-green-700 focus:ring-4 focus:ring-green-300 font-medium rounded-lg dark:bg-green-600 dark:focus:ring-green-800",
    red: "focus:outline-none text-white bg-red-700 focus:ring-4 focus:ring-red-300 font-medium rounded-lg dark:bg-red-600 dark:focus:ring-red-900",
    yellow: "focus:outline-none text-white bg-yellow-400 focus:ring-4 focus:ring-yellow-300 font-medium rounded-lg dark:focus:ring-yellow-900",
    purple: "focus:outline-none text-white bg-purple-700 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg dark:bg-purple-600 dark:focus:ring-purple-900",
    pink: "focus:outline-none text-white bg-pink-700 focus:ring-4 focus:ring-pink-300 font-medium rounded-lg dark:bg-pink-600 dark:focus:ring-pink-900"
  },
  hover: {
    default: "hover:bg-blue-800 dark:hover:bg-blue-700",
    blue: "hover:bg-blue-800 dark:hover:bg-blue-700",
    alternative: "hover:bg-gray-100 hover:text-blue-700 dark:hover:text-white dark:hover:bg-gray-700",
    dark: "hover:bg-gray-900 dark:hover:bg-gray-700",
    light: "hover:bg-gray-100 dark:hover:border-gray-600",
    green: "hover:bg-green-800 dark:hover:bg-green-700",
    red: "hover:bg-red-800 dark:hover:bg-red-700",
    yellow: "hover:bg-yellow-500",
    purple: "hover:bg-purple-800 dark:hover:bg-purple-700",
    pink: "hover:bg-pink-800 dark:hover:bg-pink-700"
  }
};
const buttonOutlineColorClasses = {
  default: {
    dark: "text-gray-900 border border-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm text-center dark:border-gray-600 dark:text-gray-400 dark:focus:ring-gray-800",
    default: "text-blue-700 border border-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm text-center dark:border-blue-500 dark:text-blue-500 dark:focus:ring-blue-800",
    blue: "text-blue-700 border border-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm text-center dark:border-blue-500 dark:text-blue-500 dark:focus:ring-blue-800",
    green: "text-green-700 border border-green-700 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm text-center dark:border-green-500 dark:text-green-500 dark:focus:ring-green-800",
    purple: "text-purple-700 border border-purple-700 focus:ring-4 focus:outline-none focus:ring-purple-300 font-medium rounded-lg text-sm text-center dark:border-purple-400 dark:text-purple-400 dark:focus:ring-purple-900",
    pink: "text-pink-700 border border-pink-700 focus:ring-4 focus:outline-none focus:ring-pink-300 font-medium rounded-lg text-sm text-center dark:border-pink-400 dark:text-pink-400 dark:focus:ring-pink-900",
    red: "text-red-700 border border-red-700 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm text-center dark:border-red-500 dark:text-red-500 dark:focus:ring-red-900",
    yellow: "text-yellow-400 border border-yellow-400 focus:ring-4 focus:outline-none focus:ring-yellow-300 font-medium rounded-lg text-sm text-center dark:border-yellow-300 dark:text-yellow-300 dark:focus:ring-yellow-900"
  },
  hover: {
    dark: "hover:text-white hover:bg-gray-900 dark:hover:text-white dark:hover:bg-gray-600",
    default: "hover:text-white hover:bg-blue-800 dark:hover:text-white dark:hover:bg-blue-600",
    blue: "hover:text-white hover:bg-blue-800 dark:hover:text-white dark:hover:bg-blue-600",
    green: "hover:text-white hover:bg-green-800 dark:hover:text-white dark:hover:bg-green-600",
    purple: "hover:text-white hover:bg-purple-800 dark:hover:text-white dark:hover:bg-purple-500",
    pink: "hover:text-white hover:bg-pink-800 dark:hover:text-white dark:hover:bg-pink-500",
    red: "hover:text-white hover:bg-red-800 dark:hover:text-white dark:hover:bg-red-600",
    yellow: "hover:text-white hover:bg-yellow-500 dark:hover:text-white dark:hover:bg-yellow-400"
  }
};
const buttonGradientClasses = {
  hover: {
    "cyan-blue": "hover:bg-gradient-to-bl",
    "green-blue": "hover:bg-gradient-to-bl",
    "pink-orange": "hover:bg-gradient-to-bl",
    "purple-blue": "hover:bg-gradient-to-bl",
    "purple-pink": "hover:bg-gradient-to-l",
    "red-yellow": "hover:bg-gradient-to-bl",
    "teal-lime": "hover:bg-gradient-to-l hover:from-teal-200 hover:to-lime-200",
    blue: "hover:bg-gradient-to-br",
    cyan: "hover:bg-gradient-to-br",
    green: "hover:bg-gradient-to-br",
    lime: "hover:bg-gradient-to-br",
    pink: "hover:bg-gradient-to-br",
    purple: "hover:bg-gradient-to-br",
    red: "hover:bg-gradient-to-br",
    teal: "hover:bg-gradient-to-br"
  },
  default: {
    "cyan-blue": "text-white bg-gradient-to-r from-cyan-500 to-blue-500 focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg",
    "green-blue": "text-white bg-gradient-to-br from-green-400 to-blue-600 focus:ring-4 focus:outline-none focus:ring-green-200 dark:focus:ring-green-800 font-medium rounded-lg",
    "pink-orange": "text-white bg-gradient-to-br from-pink-500 to-orange-400 focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-lg",
    "purple-blue": "text-white bg-gradient-to-br from-purple-600 to-blue-500 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg",
    "purple-pink": "text-white bg-gradient-to-r from-purple-500 to-pink-500 focus:ring-4 focus:outline-none focus:ring-purple-200 dark:focus:ring-purple-800 font-medium rounded-lg",
    "red-yellow": "text-gray-900 bg-gradient-to-r from-red-200 via-red-300 to-yellow-200 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400 font-medium rounded-lg",
    "teal-lime": "text-gray-900 bg-gradient-to-r from-teal-200 to-lime-200 focus:ring-4 focus:outline-none focus:ring-lime-200 dark:focus:ring-teal-700 font-medium rounded-lg",
    blue: "text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 rounded-lg",
    cyan: "text-white bg-gradient-to-r from-cyan-500 via-cyan-600 to-cyan-700 focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 rounded-lg",
    green: "text-white bg-gradient-to-r from-green-500 via-green-600 to-green-700 focus:ring-4 focus:outline-none focus:ring-green-300 dark:focus:ring-green-800 rounded-lg",
    lime: "text-gray-900 bg-gradient-to-r from-lime-500 via-lime-600 to-lime-700 focus:ring-4 focus:outline-none focus:ring-lime-300 dark:focus:ring-lime-800 rounded-lg",
    pink: "text-white bg-gradient-to-r from-pink-500 via-pink-600 to-pink-700 focus:ring-4 focus:outline-none focus:ring-pink-300 dark:focus:ring-pink-800 rounded-lg",
    purple: "text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 focus:ring-4 focus:outline-none focus:ring-purple-300 dark:focus:ring-purple-800 rounded-lg",
    red: "text-white bg-gradient-to-r from-red-500 via-red-600 to-red-700 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 rounded-lg",
    teal: "text-white bg-gradient-to-r from-teal-500 via-teal-600 to-teal-700 focus:ring-4 focus:outline-none focus:ring-teal-300 dark:focus:ring-teal-800 rounded-lg"
  }
};
const buttonOutlineGradientClasses = {
  default: {
    "cyan-blue": "relative inline-flex items-center justify-center overflow-hidden font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-cyan-500 to-blue-500 dark:text-white focus:ring-4 focus:outline-none focus:ring-cyan-200 dark:focus:ring-cyan-800",
    "green-blue": "relative inline-flex items-center justify-center overflow-hidden font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-green-400 to-blue-600 dark:text-white focus:ring-4 focus:outline-none focus:ring-green-200 dark:focus:ring-green-800",
    "pink-orange": "relative inline-flex items-center justify-center overflow-hidden font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-pink-500 to-orange-400 dark:text-white focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800",
    "purple-blue": "relative inline-flex items-center justify-center overflow-hidden font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800",
    "purple-pink": "relative inline-flex items-center justify-center overflow-hidden font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 dark:text-white focus:ring-4 focus:outline-none focus:ring-purple-200 dark:focus:ring-purple-800",
    "red-yellow": "relative inline-flex items-center justify-center overflow-hidden font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-red-200 via-red-300 to-yellow-200 dark:text-white focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400",
    "teal-lime": "relative inline-flex items-center justify-center overflow-hidden font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-teal-300 to-lime-300 dark:text-white focus:ring-4 focus:outline-none focus:ring-lime-200 dark:focus:ring-lime-800"
  },
  hover: {
    "cyan-blue": "group-hover:from-cyan-500 group-hover:to-blue-500 hover:text-white",
    "green-blue": "group-hover:from-green-400 group-hover:to-blue-600 hover:text-white",
    "pink-orange": "group-hover:from-pink-500 group-hover:to-orange-400 hover:text-white",
    "purple-blue": "group-hover:from-purple-600 group-hover:to-blue-500 hover:text-white",
    "purple-pink": "group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white",
    "red-yellow": "group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 dark:hover:text-gray-900",
    "teal-lime": "group-hover:from-teal-300 group-hover:to-lime-300 dark:hover:text-gray-900"
  }
};
const buttonSizeClasses = {
  xs: "text-xs px-2 py-1",
  sm: "text-sm px-3 py-1.5",
  md: "text-sm px-4 py-2",
  lg: "text-base px-5 py-2.5",
  xl: "text-base px-6 py-3"
};
const buttonSquareSizeClasses = {
  xs: "text-xs p-1",
  sm: "text-sm p-1.5",
  md: "text-sm p-2",
  lg: "text-base p-2.5",
  xl: "text-base p-3"
};
const buttonShadowClasses = {
  blue: "shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80",
  cyan: "shadow-lg shadow-cyan-500/50 dark:shadow-lg dark:shadow-cyan-800/80",
  green: "shadow-lg shadow-green-500/50 dark:shadow-lg dark:shadow-green-800/80",
  lime: "shadow-lg shadow-lime-500/50 dark:shadow-lg dark:shadow-lime-800/80",
  pink: "shadow-lg shadow-pink-500/50 dark:shadow-lg dark:shadow-pink-800/80",
  purple: "shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80",
  red: "shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80",
  teal: "shadow-lg shadow-teal-500/50 dark:shadow-lg dark:shadow-teal-800/80"
};
const simpleGradients = ["blue", "green", "cyan", "teal", "lime", "red", "pink", "purple"];
const alternativeColors = ["alternative", "light"];
function useButtonClasses(props) {
  const slots = useSlots();
  const sizeClasses = computed(() => {
    if (props.square.value)
      return buttonSquareSizeClasses[props.size.value];
    return buttonSizeClasses[props.size.value];
  });
  const bindClasses = computed(() => {
    const isGradient = !!props.gradient.value;
    const isColor = !!props.color.value;
    const isOutline = props.outline.value;
    let hoverClass = "";
    let backgroundClass = "";
    if (isGradient && isOutline) {
      if (!simpleGradients.includes(props.gradient.value)) {
        backgroundClass = buttonOutlineGradientClasses.default[props.gradient.value];
        if (!props.disabled.value)
          hoverClass = buttonOutlineGradientClasses.hover[props.gradient.value];
      } else {
        console.warn(`cannot use outline prop with "${props.gradient.value}" gradient`);
      }
    } else if (isGradient) {
      backgroundClass = buttonGradientClasses.default[props.gradient.value];
      if (!props.disabled.value)
        hoverClass = buttonGradientClasses.hover[props.gradient.value];
    } else if (isColor && isOutline) {
      if (!alternativeColors.includes(props.color.value)) {
        const color = props.color.value;
        backgroundClass = buttonOutlineColorClasses.default[color];
        if (!props.disabled.value)
          hoverClass = buttonOutlineColorClasses.hover[color];
      } else {
        console.warn(`cannot use outline prop with "${props.color.value}" color`);
      }
    } else {
      const color = props.color.value;
      backgroundClass = buttonColorClasses.default[color];
      if (!props.disabled.value)
        hoverClass = buttonColorClasses.hover[color];
    }
    let shadowClass = "";
    if (props.shadow.value === "") {
      if (props.gradient.value && simpleGradients.includes(props.gradient.value)) {
        shadowClass = buttonShadowClasses[props.gradient.value];
      }
    } else if (typeof props.shadow.value === "string") {
      if (simpleGradients.includes(props.shadow.value)) {
        shadowClass = buttonShadowClasses[props.shadow.value];
      }
    }
    return classNames(
      backgroundClass,
      hoverClass,
      shadowClass,
      props.pill.value ? "!rounded-full" : "",
      props.disabled.value ? "cursor-not-allowed opacity-50" : "",
      isGradient && isOutline ? "p-0.5" : sizeClasses.value,
      slots.prefix || slots.suffix || props.loading.value ? "inline-flex items-center" : ""
    );
  });
  const spanClasses = computed(() => {
    if (!!props.gradient.value && props.outline.value) {
      return classNames(
        "relative bg-white dark:bg-gray-900 rounded-md inline-flex items-center",
        sizeClasses.value,
        !props.disabled.value ? "group-hover:bg-opacity-0 transition-all ease-in duration-75" : ""
      );
    }
    return "";
  });
  return {
    wrapperClasses: bindClasses,
    spanClasses
  };
}
function useButtonSpinner(props) {
  const btnSizeSpinnerSizeMap = {
    lg: "5",
    md: "4",
    sm: "3",
    xl: "6",
    xs: "2.5"
  };
  const size = computed(() => {
    return btnSizeSpinnerSizeMap[props.size.value];
  });
  const color = computed(() => {
    if (!props.outline.value)
      return "white";
    if (props.gradient.value) {
      if (props.gradient.value.includes("purple"))
        return "purple";
      else if (props.gradient.value.includes("blue"))
        return "blue";
      else if (props.gradient.value.includes("pink"))
        return "pink";
      else if (props.gradient.value.includes("red"))
        return "red";
      return "white";
    }
    if (["alternative", "dark", "light"].includes(props.color.value)) {
      return "white";
    } else if (props.color.value === "default") {
      return "blue";
    }
    return props.color.value;
  });
  return {
    size,
    color
  };
}
function useFlowbiteThemableChildClasses(props) {
  var _a2;
  const { textClasses, borderClasses, backgroundClasses, hoverClasses, disabledClasses, focusClasses, isActive } = useFlowbiteThemable((_a2 = props.theme) == null ? void 0 : _a2.value);
  const classes = computed(() => {
    if (!isActive.value)
      return "";
    const _classes = [];
    if (props.apply.value.includes("text"))
      _classes.push(textClasses.value);
    if (props.apply.value.includes("border"))
      _classes.push(borderClasses.value);
    if (props.apply.value.includes("background"))
      _classes.push(backgroundClasses.value);
    if (props.apply.value.includes("hover"))
      _classes.push(hoverClasses.value);
    if (props.apply.value.includes("disabled"))
      _classes.push(disabledClasses.value);
    if (props.apply.value.includes("focus"))
      _classes.push(focusClasses.value);
    return _classes.join(" ");
  });
  return {
    classes
  };
}
const classTypeMatchers = {
  border: (_class) => {
    return _class.substring(0, _class.lastIndexOf("-"));
  }
};
const getTypeFromClass = (_class, matchers = classTypeMatchers) => {
  const classesToMatch = Object.keys(matchers);
  const matchClass = classesToMatch.find((_matchClass) => _class.includes(_matchClass));
  if (!matchClass)
    return _class.substring(0, _class.indexOf("-"));
  return matchers[matchClass](_class);
};
function simplifyTailwindClasses(...classes) {
  return classes.reduce((acc, value) => {
    const currentClasses = Array.isArray(value) ? Array.from(value).map((_) => _.split(" ")).flat() : value.split(" ");
    const currentTypes = currentClasses.map((_class) => getTypeFromClass(_class));
    const typesToAdd = currentTypes.filter((_) => !acc.types.includes(_));
    const typesToReplace = currentTypes.filter((_) => acc.types.includes(_));
    const newTypes = [...typesToReplace, ...typesToAdd];
    const types = [.../* @__PURE__ */ new Set([...acc.types, ...newTypes])];
    const classes2 = types.map((type) => {
      if (newTypes.includes(type)) {
        const classIndex2 = currentTypes.indexOf(type);
        if (classIndex2 >= 0)
          return currentClasses[classIndex2] || "";
      }
      const classIndex = acc.types.indexOf(type);
      if (classIndex >= 0)
        return acc.classes[classIndex] || "";
      return "";
    }).filter((_) => !!_);
    return {
      types,
      classes: classes2
    };
  }, { types: [], classes: [] }).classes.join(" ");
}
const _sfc_main$x = /* @__PURE__ */ defineComponent({
  __name: "FlowbiteThemableChild",
  props: {
    apply: {
      type: Array,
      required: true
    },
    tag: {
      type: String,
      default: "div"
    },
    theme: {
      type: String,
      default: void 0
    }
  },
  setup(__props) {
    const props = __props;
    const attrs = useAttrs();
    const { classes } = useFlowbiteThemableChildClasses(toRefs(props));
    const classAttr = computed(() => {
      return attrs.class || "";
    });
    return (_ctx, _cache) => {
      return openBlock(), createBlock(resolveDynamicComponent(__props.tag), {
        class: normalizeClass(unref(simplifyTailwindClasses)(unref(classAttr), unref(classes)))
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"]);
    };
  }
});
const _hoisted_1$o = {
  key: 0,
  class: "mr-2"
};
const _hoisted_2$l = {
  key: 0,
  class: "mr-2"
};
const _hoisted_3$c = {
  key: 1,
  class: "ml-2"
};
const _hoisted_4$6 = {
  key: 1,
  class: "ml-2"
};
const _sfc_main$w = /* @__PURE__ */ defineComponent({
  __name: "Button",
  props: {
    color: {
      type: String,
      default: "default"
    },
    gradient: {
      type: [String, null],
      default: null
    },
    size: {
      type: String,
      default: "md"
    },
    shadow: {
      type: [String, null],
      default: null
    },
    pill: {
      type: Boolean,
      default: false
    },
    square: {
      type: Boolean,
      default: false
    },
    outline: {
      type: Boolean,
      default: false
    },
    loading: {
      type: Boolean,
      default: false
    },
    loadingPosition: {
      type: String,
      default: "prefix"
    },
    disabled: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    const props = __props;
    const isOutlineGradient = computed(() => props.outline && props.gradient);
    const loadingPrefix = computed(() => props.loading && props.loadingPosition === "prefix");
    const loadingSuffix = computed(() => props.loading && props.loadingPosition === "suffix");
    const { wrapperClasses, spanClasses } = useButtonClasses(toRefs(props));
    const { color: spinnerColor, size: spinnerSize } = useButtonSpinner(toRefs(props));
    const appliableTheme = computed(() => {
      if (["alternative", "light"].includes(props.color))
        return [];
      return ["background", "hover", "focus"];
    });
    return (_ctx, _cache) => {
      return openBlock(), createBlock(_sfc_main$x, {
        tag: "button",
        apply: unref(appliableTheme),
        class: normalizeClass(unref(wrapperClasses)),
        disabled: __props.disabled
      }, {
        default: withCtx(() => [
          !unref(isOutlineGradient) && (_ctx.$slots.prefix || unref(loadingPrefix)) ? (openBlock(), createElementBlock("div", _hoisted_1$o, [
            unref(loadingPrefix) ? (openBlock(), createBlock(_sfc_main$y, {
              key: 0,
              color: unref(spinnerColor),
              size: unref(spinnerSize)
            }, null, 8, ["color", "size"])) : renderSlot(_ctx.$slots, "prefix", { key: 1 })
          ])) : createCommentVNode("", true),
          createElementVNode("span", {
            class: normalizeClass(unref(spanClasses))
          }, [
            unref(isOutlineGradient) && (_ctx.$slots.prefix || unref(loadingPrefix)) ? (openBlock(), createElementBlock("div", _hoisted_2$l, [
              unref(loadingPrefix) ? (openBlock(), createBlock(_sfc_main$y, {
                key: 0,
                color: unref(spinnerColor),
                size: unref(spinnerSize)
              }, null, 8, ["color", "size"])) : renderSlot(_ctx.$slots, "prefix", { key: 1 })
            ])) : createCommentVNode("", true),
            renderSlot(_ctx.$slots, "default"),
            unref(isOutlineGradient) && (_ctx.$slots.suffix || unref(loadingSuffix)) ? (openBlock(), createElementBlock("div", _hoisted_3$c, [
              unref(loadingSuffix) ? (openBlock(), createBlock(_sfc_main$y, {
                key: 0,
                color: unref(spinnerColor),
                size: unref(spinnerSize)
              }, null, 8, ["color", "size"])) : renderSlot(_ctx.$slots, "suffix", { key: 1 })
            ])) : createCommentVNode("", true)
          ], 2),
          !unref(isOutlineGradient) && (_ctx.$slots.suffix || unref(loadingSuffix)) ? (openBlock(), createElementBlock("div", _hoisted_4$6, [
            unref(loadingSuffix) ? (openBlock(), createBlock(_sfc_main$y, {
              key: 0,
              color: unref(spinnerColor),
              size: unref(spinnerSize)
            }, null, 8, ["color", "size"])) : renderSlot(_ctx.$slots, "suffix", { key: 1 })
          ])) : createCommentVNode("", true)
        ]),
        _: 3
      }, 8, ["apply", "class", "disabled"]);
    };
  }
});
var ButtonGroup_vue_vue_type_style_index_0_lang = "";
var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _sfc_main$v = {};
const _hoisted_1$n = {
  class: "btn-group inline-flex rounded-md shadow-sm",
  role: "group"
};
function _sfc_render$2(_ctx, _cache) {
  return openBlock(), createElementBlock("div", _hoisted_1$n, [
    renderSlot(_ctx.$slots, "default")
  ]);
}
var ButtonGroup = /* @__PURE__ */ _export_sfc(_sfc_main$v, [["render", _sfc_render$2]]);
const defaultAlertClasses = "p-4 text-sm";
const alertTextClasses = {
  danger: "text-red-700 dark:text-red-800",
  dark: "text-gray-700 dark:text-gray-300",
  info: "text-blue-700 dark:text-blue-800",
  success: "text-green-700 dark:text-green-800",
  warning: "text-yellow-700 dark:text-yellow-800"
};
const alertTypeClasses = {
  danger: "bg-red-100 dark:bg-red-200",
  dark: "bg-gray-100 dark:bg-gray-700",
  info: "bg-blue-100 dark:bg-blue-200",
  success: "bg-green-100 dark:bg-green-200",
  warning: "bg-yellow-100 dark:bg-yellow-200"
};
const alertBorderClasses = {
  danger: "border-t-4 border-red-500",
  dark: "border-t-4 border-gray-500",
  info: "border-t-4 border-blue-500",
  success: "border-t-4 border-green-500",
  warning: "border-t-4 border-yellow-500"
};
const defaultCloseButtonClasses = "ml-auto -mx-1.5 -my-1.5 rounded-lg focus:ring-2 p-1.5 inline-flex h-8 w-8";
const closeButtonClasses = {
  danger: "hover:bg-red-200 dark:hover:bg-red-300 focus:ring-red-400 bg-red-100 dark:bg-red-200 text-red-500",
  dark: "dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-800 dark:hover:text-white hover:bg-gray-200 focus:ring-gray-400 bg-gray-100 text-gray-500",
  info: "hover:bg-blue-200 dark:hover:bg-blue-300 focus:ring-blue-400 bg-blue-100 dark:bg-blue-200 text-blue-500",
  success: "bg-green-100 dark:bg-green-200 text-green-500 focus:ring-green-400 hover:bg-green-200 dark:hover:bg-green-300",
  warning: "focus:ring-yellow-400 hover:bg-yellow-200 dark:hover:bg-yellow-300 bg-yellow-100 dark:bg-yellow-200 text-yellow-500"
};
function useAlertClasses(props) {
  const alertClasses = computed(() => {
    return classNames(
      defaultAlertClasses,
      alertTypeClasses[props.type.value],
      textClasses.value,
      props.border.value ? alertBorderClasses[props.type.value] : "rounded-lg",
      props.inline.value ? "flex" : ""
    );
  });
  const textClasses = computed(() => {
    return classNames(
      alertTextClasses[props.type.value]
    );
  });
  const closeClasses = computed(() => {
    return classNames(
      defaultCloseButtonClasses,
      closeButtonClasses[props.type.value]
    );
  });
  const contentClasses = computed(() => {
    if (!props.inline.value)
      return classNames("mt-2 mb-4");
    if (!props.icon.value && !props.title.value)
      return "";
    return classNames(!props.title.value ? "ml-3" : "ml-1");
  });
  const titleClasses = computed(() => {
    if (!props.icon.value || !props.inline.value)
      return classNames(
        "font-medium",
        !props.inline.value ? "text-lg ml-2" : ""
      );
    return classNames(
      "font-medium ml-3",
      !props.inline.value ? "text-lg" : ""
    );
  });
  return {
    alertClasses,
    textClasses,
    closeClasses,
    contentClasses,
    titleClasses
  };
}
const _hoisted_1$m = /* @__PURE__ */ createElementVNode("path", {
  "fill-rule": "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",
  "clip-rule": "evenodd"
}, null, -1);
const _hoisted_2$k = [
  _hoisted_1$m
];
const _hoisted_3$b = /* @__PURE__ */ createElementVNode("span", { class: "sr-only" }, "Dismiss", -1);
const _hoisted_4$5 = /* @__PURE__ */ createElementVNode("svg", {
  class: "w-5 h-5",
  fill: "currentColor",
  viewBox: "0 0 20 20",
  xmlns: "http://www.w3.org/2000/svg"
}, [
  /* @__PURE__ */ createElementVNode("path", {
    "fill-rule": "evenodd",
    d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
    "clip-rule": "evenodd"
  })
], -1);
const _hoisted_5$5 = [
  _hoisted_3$b,
  _hoisted_4$5
];
const _hoisted_6$3 = {
  key: 0,
  class: "inline-flex items-center"
};
const _hoisted_7$3 = /* @__PURE__ */ createElementVNode("span", { class: "sr-only" }, "Dismiss", -1);
const _hoisted_8$2 = /* @__PURE__ */ createElementVNode("svg", {
  class: "w-5 h-5",
  fill: "currentColor",
  viewBox: "0 0 20 20",
  xmlns: "http://www.w3.org/2000/svg"
}, [
  /* @__PURE__ */ createElementVNode("path", {
    "fill-rule": "evenodd",
    d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
    "clip-rule": "evenodd"
  })
], -1);
const _hoisted_9$1 = [
  _hoisted_7$3,
  _hoisted_8$2
];
const _sfc_main$u = /* @__PURE__ */ defineComponent({
  __name: "Alert",
  props: {
    type: {
      type: String,
      default: "info"
    },
    title: {
      type: String,
      default: ""
    },
    closable: {
      type: Boolean,
      default: false
    },
    icon: {
      type: Boolean,
      default: true
    },
    border: {
      type: Boolean,
      default: false
    },
    inline: {
      type: Boolean,
      default: true
    }
  },
  setup(__props) {
    const props = __props;
    const { alertClasses, textClasses, closeClasses, contentClasses, titleClasses } = useAlertClasses(toRefs(props));
    const visible = ref(true);
    const onCloseClick = () => {
      visible.value = false;
    };
    return (_ctx, _cache) => {
      return visible.value ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(unref(alertClasses)),
        role: "alert"
      }, [
        createElementVNode("div", {
          class: normalizeClass(__props.inline ? "flex" : "flex items-center")
        }, [
          __props.icon ? (openBlock(), createElementBlock("svg", {
            key: 0,
            class: normalizeClass(["flex-shrink-0", "w-5", "h-5", unref(textClasses)]),
            fill: "currentColor",
            viewBox: "0 0 20 20",
            xmlns: "http://www.w3.org/2000/svg"
          }, _hoisted_2$k, 2)) : createCommentVNode("", true),
          __props.title ? (openBlock(), createElementBlock("span", {
            key: 1,
            class: normalizeClass(unref(titleClasses))
          }, toDisplayString(__props.title), 3)) : createCommentVNode("", true),
          !__props.inline && __props.closable ? (openBlock(), createElementBlock("button", {
            key: 2,
            type: "button",
            class: normalizeClass(unref(closeClasses)),
            "aria-label": "Close",
            onClick: onCloseClick
          }, _hoisted_5$5, 2)) : createCommentVNode("", true)
        ], 2),
        createElementVNode("div", {
          class: normalizeClass(unref(contentClasses))
        }, [
          renderSlot(_ctx.$slots, "default")
        ], 2),
        _ctx.$slots.actions ? (openBlock(), createElementBlock("div", _hoisted_6$3, [
          renderSlot(_ctx.$slots, "actions")
        ])) : createCommentVNode("", true),
        __props.inline && __props.closable ? (openBlock(), createElementBlock("button", {
          key: 1,
          type: "button",
          class: normalizeClass(unref(closeClasses)),
          "aria-label": "Close",
          onClick: onCloseClick
        }, _hoisted_9$1, 2)) : createCommentVNode("", true)
      ], 2)) : createCommentVNode("", true);
    };
  }
});
const TAB_STYLE_INJECTION_KEY = "flowbite-tab-style-injection";
const TAB_ACTIVE_NAME_INJECTION_KEY = "flowbite-tab-active-name-injection";
const TAB_VISIBILITY_DIRECTIVE_INJECTION_KEY = "flowbite-tab-visibility-directive-injection";
const TAB_ACTIVATE_INJECTION_KEY = "flowbite-tab-activate-func-injection";
function useTabsClasses(props) {
  const ulClasses = computed(() => {
    if (props.variant === "default")
      return "flex flex-wrap text-sm font-medium text-center text-gray-500 border-b border-gray-200 dark:border-gray-700 dark:text-gray-400";
    else if (props.variant === "pills")
      return "flex flex-wrap text-sm font-medium text-center text-gray-500 dark:text-gray-400";
    else if (props.variant === "underline")
      return "flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500 dark:text-gray-400";
    return "";
  });
  const divClasses = computed(() => {
    if (props.variant === "underline")
      return "text-sm font-medium text-center text-gray-500 border-b border-gray-200 dark:text-gray-400 dark:border-gray-700";
    return "";
  });
  return {
    ulClasses,
    divClasses
  };
}
function flatten$2(vNodes, filterCommentNode = true, result = []) {
  vNodes.forEach((vNode) => {
    if (vNode === null)
      return;
    if (typeof vNode !== "object") {
      if (typeof vNode === "string" || typeof vNode === "number") {
        result.push(createTextVNode(String(vNode)));
      }
      return;
    }
    if (Array.isArray(vNode)) {
      flatten$2(vNode, filterCommentNode, result);
      return;
    }
    if (vNode.type === Fragment) {
      if (vNode.children === null)
        return;
      if (Array.isArray(vNode.children)) {
        flatten$2(vNode.children, filterCommentNode, result);
      }
    } else if (vNode.type !== Comment) {
      result.push(vNode);
    }
  });
  return result;
}
const defaultTabClasses = {
  default: "cursor-pointer inline-block p-4 rounded-t-lg hover:text-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 dark:hover:text-gray-300",
  active: "cursor-pointer inline-block p-4 text-blue-600 bg-gray-100 rounded-t-lg active dark:bg-gray-800 dark:text-blue-500",
  disabled: "inline-block p-4 text-gray-400 rounded-t-lg cursor-not-allowed dark:text-gray-500"
};
const underlineTabClasses = {
  default: "cursor-pointer inline-block p-4 rounded-t-lg border-b-2 border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300",
  active: "cursor-pointer inline-block p-4 text-blue-600 rounded-t-lg border-b-2 border-blue-600 active dark:text-blue-500 dark:border-blue-500",
  disabled: "inline-block p-4 text-gray-400 rounded-t-lg cursor-not-allowed dark:text-gray-500"
};
const pillsTabClasses = {
  default: "cursor-pointer inline-block py-3 px-4 rounded-lg hover:text-gray-900 hover:bg-gray-100 dark:hover:bg-gray-800 dark:hover:text-white",
  active: "cursor-pointer inline-block py-3 px-4 text-white bg-blue-600 rounded-lg active",
  disabled: "inline-block py-3 px-4 text-gray-400 cursor-not-allowed dark:text-gray-500"
};
function useTabClasses(props) {
  const theme = useFlowbiteThemable();
  const tabClasses = computed(() => {
    const isActiveTheme = theme.isActive.value;
    const tabClassType = props.active.value ? "active" : props.disabled.value ? "disabled" : "default";
    if (props.variant === "default")
      return simplifyTailwindClasses(
        defaultTabClasses[tabClassType],
        isActiveTheme && tabClassType === "active" ? theme.textClasses.value : ""
      );
    else if (props.variant === "underline")
      return simplifyTailwindClasses(
        underlineTabClasses[tabClassType],
        isActiveTheme && tabClassType === "active" ? [theme.borderClasses.value, theme.textClasses.value] : ""
      );
    else if (props.variant === "pills")
      return simplifyTailwindClasses(
        pillsTabClasses[tabClassType],
        isActiveTheme && tabClassType === "active" ? [theme.backgroundClasses.value, "text-white"] : ""
      );
    return "";
  });
  return {
    tabClasses
  };
}
const _sfc_main$t = /* @__PURE__ */ defineComponent({
  __name: "TabPane",
  props: {
    name: {
      type: String,
      required: true
    },
    title: {
      type: String,
      default: ""
    },
    disabled: {
      type: Boolean,
      default: false
    },
    active: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    const props = __props;
    const variant = inject(TAB_STYLE_INJECTION_KEY);
    if (!variant) {
      console.warn("you can't use Tab outside of Tabs component. No tab style injection found");
    }
    const onActivate = inject(TAB_ACTIVATE_INJECTION_KEY);
    if (!onActivate) {
      console.warn("you can't use Tab outside of Tabs component. No tab activate injection found");
    }
    const tryActivateTab = () => {
      if (props.disabled)
        return;
      if (!onActivate)
        return console.warn("no onActivate");
      onActivate(props.name);
    };
    const { tabClasses } = useTabClasses({
      active: toRef(props, "active"),
      disabled: toRef(props, "disabled"),
      variant
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("li", null, [
        createElementVNode("div", {
          class: normalizeClass(unref(tabClasses)),
          onClick: tryActivateTab
        }, toDisplayString(__props.title), 3)
      ]);
    };
  }
});
const __default__$1 = {
  inheritAttrs: false
};
const _sfc_main$s = /* @__PURE__ */ defineComponent({
  ...__default__$1,
  __name: "Tabs",
  props: {
    variant: {
      type: String,
      default: "default"
    },
    modelValue: {
      type: String,
      default: ""
    },
    directive: {
      type: String,
      default: "if"
    }
  },
  emits: ["update:modelValue"],
  setup(__props, { emit }) {
    const props = __props;
    const { ulClasses, divClasses } = useTabsClasses(props);
    provide(TAB_STYLE_INJECTION_KEY, props.variant);
    const slots = useSlots();
    const defaultSlot = slots.default;
    const tabsChildren = computed(() => {
      return defaultSlot ? flatten$2(defaultSlot()).filter((v) => {
        return v.type.__FLOWBITE_TAB__;
      }) : [];
    });
    const modelValueRef = computed({
      get: () => props.modelValue,
      set: (value) => emit("update:modelValue", value)
    });
    provide(TAB_ACTIVE_NAME_INJECTION_KEY, modelValueRef);
    provide(TAB_VISIBILITY_DIRECTIVE_INJECTION_KEY, toRef(props, "directive"));
    const onActivate = (value) => {
      modelValueRef.value = value;
    };
    provide(TAB_ACTIVATE_INJECTION_KEY, onActivate);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        createElementVNode("div", {
          class: normalizeClass(unref(divClasses))
        }, [
          createElementVNode("ul", {
            class: normalizeClass(unref(ulClasses))
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(tabsChildren), (item, id) => {
              var _a2, _b, _c, _d;
              return openBlock(), createBlock(_sfc_main$t, {
                key: id,
                active: unref(modelValueRef) === ((_a2 = item.props) == null ? void 0 : _a2.name),
                name: (_b = item.props) == null ? void 0 : _b.name,
                disabled: (_c = item.props) == null ? void 0 : _c.disabled,
                title: (_d = item.props) == null ? void 0 : _d.title
              }, null, 8, ["active", "name", "disabled", "title"]);
            }), 128))
          ], 2)
        ], 2),
        createElementVNode("div", normalizeProps(guardReactiveProps(_ctx.$attrs)), [
          renderSlot(_ctx.$slots, "default")
        ], 16)
      ]);
    };
  }
});
const _hoisted_1$l = { key: 0 };
const _hoisted_2$j = { key: 1 };
const __default__ = {
  __FLOWBITE_TAB__: true
};
const _sfc_main$r = /* @__PURE__ */ defineComponent({
  ...__default__,
  __name: "Tab",
  props: {
    name: {
      type: String,
      required: true
    },
    title: {
      type: String,
      default: ""
    },
    disabled: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    const activeTab = inject(TAB_ACTIVE_NAME_INJECTION_KEY, "");
    const directive = inject(TAB_VISIBILITY_DIRECTIVE_INJECTION_KEY, "if");
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        unref(directive) === "if" ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
          unref(activeTab) === __props.name ? (openBlock(), createElementBlock("div", _hoisted_1$l, [
            renderSlot(_ctx.$slots, "default")
          ])) : createCommentVNode("", true)
        ], 64)) : unref(directive) === "show" ? withDirectives((openBlock(), createElementBlock("div", _hoisted_2$j, [
          renderSlot(_ctx.$slots, "default")
        ], 512)), [
          [vShow, unref(activeTab) === __props.name]
        ]) : createCommentVNode("", true)
      ]);
    };
  }
});
const defaultDropdownClasses = "absolute z-10 bg-white divide-y divide-gray-100 rounded shadow dark:bg-gray-700";
const defaultGapInPx = 8;
const placementDropdownClasses = {
  bottom: "",
  left: "top-0",
  right: "top-0",
  top: ""
};
const placementCalculators = {
  bottom(rect) {
    return `bottom: -${rect.height + defaultGapInPx}px;`;
  },
  left(rect) {
    return `left: -${rect.width + defaultGapInPx}px;`;
  },
  right(rect) {
    return `right: -${rect.width + defaultGapInPx}px;`;
  },
  top(rect) {
    return `top: -${rect.height + defaultGapInPx}px;`;
  }
};
function useDropdownClasses(props) {
  watch(props.visible, (value) => {
    if (value)
      nextTick(() => calculatePlacementClasses());
  });
  const placementStyles = ref("");
  const calculatePlacementClasses = () => {
    var _a2;
    const boundingRect = (_a2 = props.contentRef.value) == null ? void 0 : _a2.getBoundingClientRect();
    if (!boundingRect)
      return placementStyles.value = "";
    placementStyles.value = placementCalculators[props.placement.value](boundingRect);
  };
  const contentClasses = computed(() => {
    return classNames(
      defaultDropdownClasses,
      placementDropdownClasses[props.placement.value]
    );
  });
  return {
    contentClasses,
    contentStyles: placementStyles
  };
}
var _a;
const isClient = typeof window !== "undefined";
const isDef = (val) => typeof val !== "undefined";
const isString = (val) => typeof val === "string";
const noop = () => {
};
isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function tryOnScopeDispose(fn) {
  if (getCurrentScope()) {
    onScopeDispose(fn);
    return true;
  }
  return false;
}
function useTimeoutFn(cb, interval, options = {}) {
  const {
    immediate = true
  } = options;
  const isPending = ref(false);
  let timer = null;
  function clear() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }
  function stop() {
    isPending.value = false;
    clear();
  }
  function start(...args) {
    clear();
    isPending.value = true;
    timer = setTimeout(() => {
      isPending.value = false;
      timer = null;
      cb(...args);
    }, unref(interval));
  }
  if (immediate) {
    isPending.value = true;
    if (isClient)
      start();
  }
  tryOnScopeDispose(stop);
  return {
    isPending,
    start,
    stop
  };
}
function unrefElement(elRef) {
  var _a2;
  const plain = unref(elRef);
  return (_a2 = plain == null ? void 0 : plain.$el) != null ? _a2 : plain;
}
const defaultWindow = isClient ? window : void 0;
isClient ? window.document : void 0;
isClient ? window.navigator : void 0;
isClient ? window.location : void 0;
function useEventListener(...args) {
  let target;
  let event;
  let listener;
  let options;
  if (isString(args[0])) {
    [event, listener, options] = args;
    target = defaultWindow;
  } else {
    [target, event, listener, options] = args;
  }
  if (!target)
    return noop;
  let cleanup = noop;
  const stopWatch = watch(() => unrefElement(target), (el) => {
    cleanup();
    if (!el)
      return;
    el.addEventListener(event, listener, options);
    cleanup = () => {
      el.removeEventListener(event, listener, options);
      cleanup = noop;
    };
  }, { immediate: true, flush: "post" });
  const stop = () => {
    stopWatch();
    cleanup();
  };
  tryOnScopeDispose(stop);
  return stop;
}
function onClickOutside(target, handler, options = {}) {
  const { window: window2 = defaultWindow, ignore, capture = true, detectIframe = false } = options;
  if (!window2)
    return;
  const shouldListen = ref(true);
  let fallback;
  const listener = (event) => {
    window2.clearTimeout(fallback);
    const el = unrefElement(target);
    const composedPath = event.composedPath();
    if (!el || el === event.target || composedPath.includes(el) || !shouldListen.value)
      return;
    if (ignore && ignore.length > 0) {
      if (ignore.some((target2) => {
        const el2 = unrefElement(target2);
        return el2 && (event.target === el2 || composedPath.includes(el2));
      }))
        return;
    }
    handler(event);
  };
  const cleanup = [
    useEventListener(window2, "click", listener, { passive: true, capture }),
    useEventListener(window2, "pointerdown", (e) => {
      const el = unrefElement(target);
      shouldListen.value = !!el && !e.composedPath().includes(el);
    }, { passive: true }),
    useEventListener(window2, "pointerup", (e) => {
      if (e.button === 0) {
        const path = e.composedPath();
        e.composedPath = () => path;
        fallback = window2.setTimeout(() => listener(e), 50);
      }
    }, { passive: true }),
    detectIframe && useEventListener(window2, "blur", (event) => {
      var _a2;
      const el = unrefElement(target);
      if (((_a2 = document.activeElement) == null ? void 0 : _a2.tagName) === "IFRAME" && !(el == null ? void 0 : el.contains(document.activeElement)))
        handler(event);
    })
  ].filter(Boolean);
  const stop = () => cleanup.forEach((fn) => fn());
  return stop;
}
const _global = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
const globalKey = "__vueuse_ssr_handlers__";
_global[globalKey] = _global[globalKey] || {};
_global[globalKey];
var SwipeDirection;
(function(SwipeDirection2) {
  SwipeDirection2["UP"] = "UP";
  SwipeDirection2["RIGHT"] = "RIGHT";
  SwipeDirection2["DOWN"] = "DOWN";
  SwipeDirection2["LEFT"] = "LEFT";
  SwipeDirection2["NONE"] = "NONE";
})(SwipeDirection || (SwipeDirection = {}));
function useVModel(props, key, emit, options = {}) {
  var _a2, _b, _c;
  const {
    passive = false,
    eventName,
    deep = false,
    defaultValue
  } = options;
  const vm = getCurrentInstance();
  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a2 = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a2.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));
  let event = eventName;
  if (!key) {
    {
      key = "modelValue";
    }
  }
  event = eventName || event || `update:${key.toString()}`;
  const getValue2 = () => isDef(props[key]) ? props[key] : defaultValue;
  if (passive) {
    const proxy = ref(getValue2());
    watch(() => props[key], (v) => proxy.value = v);
    watch(proxy, (v) => {
      if (v !== props[key] || deep)
        _emit(event, v);
    }, {
      deep
    });
    return proxy;
  } else {
    return computed({
      get() {
        return getValue2();
      },
      set(value) {
        _emit(event, value);
      }
    });
  }
}
function getFirstSlotVNode(slots, slotName = "default", props = void 0) {
  const slot = slots[slotName];
  if (!slot) {
    console.warn("getFirstSlotVNode", `slot[${slotName}] is empty`);
    return null;
  }
  const slotContent = flatten$2(slot(props));
  if (slotContent.length === 1) {
    return slotContent[0];
  } else {
    console.warn("getFirstSlotVNode", `slot[${slotName}] should have exactly one child`);
    return null;
  }
}
var isArray$5 = Array.isArray;
var isArray_1 = isArray$5;
var freeGlobal$1 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
var _freeGlobal = freeGlobal$1;
var freeGlobal = _freeGlobal;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root$3 = freeGlobal || freeSelf || Function("return this")();
var _root = root$3;
var root$2 = _root;
var Symbol$5 = root$2.Symbol;
var _Symbol = Symbol$5;
var Symbol$4 = _Symbol;
var objectProto$6 = Object.prototype;
var hasOwnProperty$5 = objectProto$6.hasOwnProperty;
var nativeObjectToString$1 = objectProto$6.toString;
var symToStringTag$1 = Symbol$4 ? Symbol$4.toStringTag : void 0;
function getRawTag$1(value) {
  var isOwn = hasOwnProperty$5.call(value, symToStringTag$1), tag = value[symToStringTag$1];
  try {
    value[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e) {
  }
  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}
var _getRawTag = getRawTag$1;
var objectProto$5 = Object.prototype;
var nativeObjectToString = objectProto$5.toString;
function objectToString$1(value) {
  return nativeObjectToString.call(value);
}
var _objectToString = objectToString$1;
var Symbol$3 = _Symbol, getRawTag = _getRawTag, objectToString = _objectToString;
var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
var symToStringTag = Symbol$3 ? Symbol$3.toStringTag : void 0;
function baseGetTag$3(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
var _baseGetTag = baseGetTag$3;
function isObjectLike$3(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_1 = isObjectLike$3;
var baseGetTag$2 = _baseGetTag, isObjectLike$2 = isObjectLike_1;
var symbolTag = "[object Symbol]";
function isSymbol$3(value) {
  return typeof value == "symbol" || isObjectLike$2(value) && baseGetTag$2(value) == symbolTag;
}
var isSymbol_1 = isSymbol$3;
var isArray$4 = isArray_1, isSymbol$2 = isSymbol_1;
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
function isKey$1(value, object) {
  if (isArray$4(value)) {
    return false;
  }
  var type = typeof value;
  if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol$2(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
var _isKey = isKey$1;
function isObject$3(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
var isObject_1 = isObject$3;
var baseGetTag$1 = _baseGetTag, isObject$2 = isObject_1;
var asyncTag = "[object AsyncFunction]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", proxyTag = "[object Proxy]";
function isFunction$1(value) {
  if (!isObject$2(value)) {
    return false;
  }
  var tag = baseGetTag$1(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_1 = isFunction$1;
var root$1 = _root;
var coreJsData$1 = root$1["__core-js_shared__"];
var _coreJsData = coreJsData$1;
var coreJsData = _coreJsData;
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked$1(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var _isMasked = isMasked$1;
var funcProto$1 = Function.prototype;
var funcToString$1 = funcProto$1.toString;
function toSource$1(func) {
  if (func != null) {
    try {
      return funcToString$1.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var _toSource = toSource$1;
var isFunction = isFunction_1, isMasked = _isMasked, isObject$1 = isObject_1, toSource = _toSource;
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto = Function.prototype, objectProto$4 = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty$4 = objectProto$4.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString.call(hasOwnProperty$4).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative$1(value) {
  if (!isObject$1(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}
var _baseIsNative = baseIsNative$1;
function getValue$1(object, key) {
  return object == null ? void 0 : object[key];
}
var _getValue = getValue$1;
var baseIsNative = _baseIsNative, getValue = _getValue;
function getNative$3(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : void 0;
}
var _getNative = getNative$3;
var getNative$2 = _getNative;
var nativeCreate$4 = getNative$2(Object, "create");
var _nativeCreate = nativeCreate$4;
var nativeCreate$3 = _nativeCreate;
function hashClear$1() {
  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
  this.size = 0;
}
var _hashClear = hashClear$1;
function hashDelete$1(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}
var _hashDelete = hashDelete$1;
var nativeCreate$2 = _nativeCreate;
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
var objectProto$3 = Object.prototype;
var hasOwnProperty$3 = objectProto$3.hasOwnProperty;
function hashGet$1(key) {
  var data = this.__data__;
  if (nativeCreate$2) {
    var result = data[key];
    return result === HASH_UNDEFINED$1 ? void 0 : result;
  }
  return hasOwnProperty$3.call(data, key) ? data[key] : void 0;
}
var _hashGet = hashGet$1;
var nativeCreate$1 = _nativeCreate;
var objectProto$2 = Object.prototype;
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
function hashHas$1(key) {
  var data = this.__data__;
  return nativeCreate$1 ? data[key] !== void 0 : hasOwnProperty$2.call(data, key);
}
var _hashHas = hashHas$1;
var nativeCreate = _nativeCreate;
var HASH_UNDEFINED = "__lodash_hash_undefined__";
function hashSet$1(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
  return this;
}
var _hashSet = hashSet$1;
var hashClear = _hashClear, hashDelete = _hashDelete, hashGet = _hashGet, hashHas = _hashHas, hashSet = _hashSet;
function Hash$1(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash$1.prototype.clear = hashClear;
Hash$1.prototype["delete"] = hashDelete;
Hash$1.prototype.get = hashGet;
Hash$1.prototype.has = hashHas;
Hash$1.prototype.set = hashSet;
var _Hash = Hash$1;
function listCacheClear$1() {
  this.__data__ = [];
  this.size = 0;
}
var _listCacheClear = listCacheClear$1;
function eq$2(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_1 = eq$2;
var eq$1 = eq_1;
function assocIndexOf$4(array, key) {
  var length = array.length;
  while (length--) {
    if (eq$1(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var _assocIndexOf = assocIndexOf$4;
var assocIndexOf$3 = _assocIndexOf;
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete$1(key) {
  var data = this.__data__, index = assocIndexOf$3(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var _listCacheDelete = listCacheDelete$1;
var assocIndexOf$2 = _assocIndexOf;
function listCacheGet$1(key) {
  var data = this.__data__, index = assocIndexOf$2(data, key);
  return index < 0 ? void 0 : data[index][1];
}
var _listCacheGet = listCacheGet$1;
var assocIndexOf$1 = _assocIndexOf;
function listCacheHas$1(key) {
  return assocIndexOf$1(this.__data__, key) > -1;
}
var _listCacheHas = listCacheHas$1;
var assocIndexOf = _assocIndexOf;
function listCacheSet$1(key, value) {
  var data = this.__data__, index = assocIndexOf(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var _listCacheSet = listCacheSet$1;
var listCacheClear = _listCacheClear, listCacheDelete = _listCacheDelete, listCacheGet = _listCacheGet, listCacheHas = _listCacheHas, listCacheSet = _listCacheSet;
function ListCache$1(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache$1.prototype.clear = listCacheClear;
ListCache$1.prototype["delete"] = listCacheDelete;
ListCache$1.prototype.get = listCacheGet;
ListCache$1.prototype.has = listCacheHas;
ListCache$1.prototype.set = listCacheSet;
var _ListCache = ListCache$1;
var getNative$1 = _getNative, root = _root;
var Map$1 = getNative$1(root, "Map");
var _Map = Map$1;
var Hash = _Hash, ListCache = _ListCache, Map = _Map;
function mapCacheClear$1() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash(),
    "map": new (Map || ListCache)(),
    "string": new Hash()
  };
}
var _mapCacheClear = mapCacheClear$1;
function isKeyable$1(value) {
  var type = typeof value;
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
var _isKeyable = isKeyable$1;
var isKeyable = _isKeyable;
function getMapData$4(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var _getMapData = getMapData$4;
var getMapData$3 = _getMapData;
function mapCacheDelete$1(key) {
  var result = getMapData$3(this, key)["delete"](key);
  this.size -= result ? 1 : 0;
  return result;
}
var _mapCacheDelete = mapCacheDelete$1;
var getMapData$2 = _getMapData;
function mapCacheGet$1(key) {
  return getMapData$2(this, key).get(key);
}
var _mapCacheGet = mapCacheGet$1;
var getMapData$1 = _getMapData;
function mapCacheHas$1(key) {
  return getMapData$1(this, key).has(key);
}
var _mapCacheHas = mapCacheHas$1;
var getMapData = _getMapData;
function mapCacheSet$1(key, value) {
  var data = getMapData(this, key), size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}
var _mapCacheSet = mapCacheSet$1;
var mapCacheClear = _mapCacheClear, mapCacheDelete = _mapCacheDelete, mapCacheGet = _mapCacheGet, mapCacheHas = _mapCacheHas, mapCacheSet = _mapCacheSet;
function MapCache$1(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache$1.prototype.clear = mapCacheClear;
MapCache$1.prototype["delete"] = mapCacheDelete;
MapCache$1.prototype.get = mapCacheGet;
MapCache$1.prototype.has = mapCacheHas;
MapCache$1.prototype.set = mapCacheSet;
var _MapCache = MapCache$1;
var MapCache = _MapCache;
var FUNC_ERROR_TEXT = "Expected a function";
function memoize$1(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize$1.Cache || MapCache)();
  return memoized;
}
memoize$1.Cache = MapCache;
var memoize_1 = memoize$1;
var memoize = memoize_1;
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped$1(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result.cache;
  return result;
}
var _memoizeCapped = memoizeCapped$1;
var memoizeCapped = _memoizeCapped;
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath$1 = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46) {
    result.push("");
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
  });
  return result;
});
var _stringToPath = stringToPath$1;
function arrayMap$1(array, iteratee) {
  var index = -1, length = array == null ? 0 : array.length, result = Array(length);
  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}
var _arrayMap = arrayMap$1;
var Symbol$2 = _Symbol, arrayMap = _arrayMap, isArray$3 = isArray_1, isSymbol$1 = isSymbol_1;
var INFINITY$1 = 1 / 0;
var symbolProto = Symbol$2 ? Symbol$2.prototype : void 0, symbolToString = symbolProto ? symbolProto.toString : void 0;
function baseToString$1(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray$3(value)) {
    return arrayMap(value, baseToString$1) + "";
  }
  if (isSymbol$1(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY$1 ? "-0" : result;
}
var _baseToString = baseToString$1;
var baseToString = _baseToString;
function toString$1(value) {
  return value == null ? "" : baseToString(value);
}
var toString_1 = toString$1;
var isArray$2 = isArray_1, isKey = _isKey, stringToPath = _stringToPath, toString = toString_1;
function castPath$4(value, object) {
  if (isArray$2(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}
var _castPath = castPath$4;
var isSymbol = isSymbol_1;
var INFINITY = 1 / 0;
function toKey$3(value) {
  if (typeof value == "string" || isSymbol(value)) {
    return value;
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY ? "-0" : result;
}
var _toKey = toKey$3;
var castPath$3 = _castPath, toKey$2 = _toKey;
function baseGet$1(object, path) {
  path = castPath$3(path, object);
  var index = 0, length = path.length;
  while (object != null && index < length) {
    object = object[toKey$2(path[index++])];
  }
  return index && index == length ? object : void 0;
}
var _baseGet = baseGet$1;
var getNative = _getNative;
var defineProperty$2 = function() {
  try {
    var func = getNative(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e) {
  }
}();
var _defineProperty = defineProperty$2;
var defineProperty$1 = _defineProperty;
function baseAssignValue$1(object, key, value) {
  if (key == "__proto__" && defineProperty$1) {
    defineProperty$1(object, key, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object[key] = value;
  }
}
var _baseAssignValue = baseAssignValue$1;
var baseAssignValue = _baseAssignValue, eq = eq_1;
var objectProto$1 = Object.prototype;
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
function assignValue$1(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty$1.call(object, key) && eq(objValue, value)) || value === void 0 && !(key in object)) {
    baseAssignValue(object, key, value);
  }
}
var _assignValue = assignValue$1;
var MAX_SAFE_INTEGER$1 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex$2(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var _isIndex = isIndex$2;
var assignValue = _assignValue, castPath$2 = _castPath, isIndex$1 = _isIndex, isObject = isObject_1, toKey$1 = _toKey;
function baseSet$1(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath$2(path, object);
  var index = -1, length = path.length, lastIndex = length - 1, nested = object;
  while (nested != null && ++index < length) {
    var key = toKey$1(path[index]), newValue = value;
    if (key === "__proto__" || key === "constructor" || key === "prototype") {
      return object;
    }
    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : void 0;
      if (newValue === void 0) {
        newValue = isObject(objValue) ? objValue : isIndex$1(path[index + 1]) ? [] : {};
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}
var _baseSet = baseSet$1;
var baseGet = _baseGet, baseSet = _baseSet, castPath$1 = _castPath;
function basePickBy$1(object, paths, predicate) {
  var index = -1, length = paths.length, result = {};
  while (++index < length) {
    var path = paths[index], value = baseGet(object, path);
    if (predicate(value, path)) {
      baseSet(result, castPath$1(path, object), value);
    }
  }
  return result;
}
var _basePickBy = basePickBy$1;
function baseHasIn$1(object, key) {
  return object != null && key in Object(object);
}
var _baseHasIn = baseHasIn$1;
var baseGetTag = _baseGetTag, isObjectLike$1 = isObjectLike_1;
var argsTag = "[object Arguments]";
function baseIsArguments$1(value) {
  return isObjectLike$1(value) && baseGetTag(value) == argsTag;
}
var _baseIsArguments = baseIsArguments$1;
var baseIsArguments = _baseIsArguments, isObjectLike = isObjectLike_1;
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
var propertyIsEnumerable = objectProto.propertyIsEnumerable;
var isArguments$2 = baseIsArguments(function() {
  return arguments;
}()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_1 = isArguments$2;
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength$1(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
var isLength_1 = isLength$1;
var castPath = _castPath, isArguments$1 = isArguments_1, isArray$1 = isArray_1, isIndex = _isIndex, isLength = isLength_1, toKey = _toKey;
function hasPath$1(object, path, hasFunc) {
  path = castPath(path, object);
  var index = -1, length = path.length, result = false;
  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) && (isArray$1(object) || isArguments$1(object));
}
var _hasPath = hasPath$1;
var baseHasIn = _baseHasIn, hasPath = _hasPath;
function hasIn$1(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}
var hasIn_1 = hasIn$1;
var basePickBy = _basePickBy, hasIn = hasIn_1;
function basePick$1(object, paths) {
  return basePickBy(object, paths, function(value, path) {
    return hasIn(object, path);
  });
}
var _basePick = basePick$1;
function arrayPush$1(array, values) {
  var index = -1, length = values.length, offset = array.length;
  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}
var _arrayPush = arrayPush$1;
var Symbol$1 = _Symbol, isArguments = isArguments_1, isArray = isArray_1;
var spreadableSymbol = Symbol$1 ? Symbol$1.isConcatSpreadable : void 0;
function isFlattenable$1(value) {
  return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
var _isFlattenable = isFlattenable$1;
var arrayPush = _arrayPush, isFlattenable = _isFlattenable;
function baseFlatten$1(array, depth, predicate, isStrict, result) {
  var index = -1, length = array.length;
  predicate || (predicate = isFlattenable);
  result || (result = []);
  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten$1(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}
var _baseFlatten = baseFlatten$1;
var baseFlatten = _baseFlatten;
function flatten$1(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}
var flatten_1 = flatten$1;
function apply$1(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var _apply = apply$1;
var apply = _apply;
var nativeMax = Math.max;
function overRest$1(func, start, transform) {
  start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}
var _overRest = overRest$1;
function constant$1(value) {
  return function() {
    return value;
  };
}
var constant_1 = constant$1;
function identity$1(value) {
  return value;
}
var identity_1 = identity$1;
var constant = constant_1, defineProperty = _defineProperty, identity = identity_1;
var baseSetToString$1 = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant(string),
    "writable": true
  });
};
var _baseSetToString = baseSetToString$1;
var HOT_COUNT = 800, HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut$1(func) {
  var count = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var _shortOut = shortOut$1;
var baseSetToString = _baseSetToString, shortOut = _shortOut;
var setToString$1 = shortOut(baseSetToString);
var _setToString = setToString$1;
var flatten = flatten_1, overRest = _overRest, setToString = _setToString;
function flatRest$1(func) {
  return setToString(overRest(func, void 0, flatten), func + "");
}
var _flatRest = flatRest$1;
var basePick = _basePick, flatRest = _flatRest;
var pick = flatRest(function(object, paths) {
  return object == null ? {} : basePick(object, paths);
});
var pick_1 = pick;
const triggerEventMap = {
  focus: ["onFocus", "onBlur"],
  click: ["onClick"],
  hover: ["onMouseenter", "onMouseleave"]
};
function appendEvents(vNode, events) {
  Object.entries(triggerEventMap).forEach(([, eventNames]) => {
    eventNames.forEach((eventName) => {
      if (!vNode.props)
        vNode.props = {};
      else {
        vNode.props = Object.assign({}, vNode.props);
      }
      const originalHandler = vNode.props[eventName];
      const handler = events[eventName];
      if (!originalHandler)
        vNode.props[eventName] = handler;
      else {
        vNode.props[eventName] = (...args) => {
          originalHandler(...args);
          handler(...args);
        };
      }
    });
  });
}
const _sfc_main$q = defineComponent({
  name: "SlotListener",
  emits: ["click", "focus", "blur", "mouseenter", "mouseleave"],
  props: {
    trigger: {
      type: String,
      default: "click"
    }
  },
  setup(props, { emit }) {
    const handleFocus = (e) => {
      emit("focus", e);
    };
    const handleBlur = (e) => {
      emit("blur", e);
    };
    const handleClick = (e) => {
      emit("click", e);
    };
    const handleMouseEnter = (e) => {
      emit("mouseenter", e);
    };
    const handleMouseLeave = (e) => {
      emit("mouseleave", e);
    };
    return {
      handleClick,
      handleBlur,
      handleFocus,
      handleMouseLeave,
      handleMouseEnter
    };
  },
  render() {
    const {
      $slots
    } = this;
    const handlers = {
      onClick: this.handleClick,
      onMouseenter: this.handleMouseEnter,
      onMouseleave: this.handleMouseLeave,
      onFocus: this.handleFocus,
      onBlur: this.handleBlur
    };
    let triggerVNode = getFirstSlotVNode($slots, "default");
    const ascendantAndCurrentHandlers = [
      handlers
    ];
    if (triggerVNode == null ? void 0 : triggerVNode.props)
      ascendantAndCurrentHandlers.push(pick_1(triggerVNode.props, "onClick", "onMouseenter", "onMouseleave", "onFocus", "onBlur"));
    const mergedHandlers = {
      onBlur: (e) => {
        ascendantAndCurrentHandlers.forEach((_handlers) => {
          var _a2;
          (_a2 = _handlers == null ? void 0 : _handlers.onBlur) == null ? void 0 : _a2.call(_handlers, e);
        });
      },
      onFocus: (e) => {
        ascendantAndCurrentHandlers.forEach((_handlers) => {
          var _a2;
          (_a2 = _handlers == null ? void 0 : _handlers.onFocus) == null ? void 0 : _a2.call(_handlers, e);
        });
      },
      onClick: (e) => {
        ascendantAndCurrentHandlers.forEach((_handlers) => {
          var _a2;
          (_a2 = _handlers == null ? void 0 : _handlers.onClick) == null ? void 0 : _a2.call(_handlers, e);
        });
      },
      onMouseenter: (e) => {
        ascendantAndCurrentHandlers.forEach((_handlers) => {
          var _a2;
          (_a2 = _handlers == null ? void 0 : _handlers.onMouseenter) == null ? void 0 : _a2.call(_handlers, e);
        });
      },
      onMouseleave: (e) => {
        ascendantAndCurrentHandlers.forEach((_handlers) => {
          var _a2;
          (_a2 = _handlers == null ? void 0 : _handlers.onMouseleave) == null ? void 0 : _a2.call(_handlers, e);
        });
      }
    };
    if (triggerVNode)
      appendEvents(
        triggerVNode,
        mergedHandlers
      );
    return triggerVNode;
  }
});
var Dropdown_css_vue_type_style_index_0_src_7c2b4ef2_scoped_true_lang = "";
const _withScopeId = (n) => (pushScopeId("data-v-7c2b4ef2"), n = n(), popScopeId(), n);
const _hoisted_1$k = { class: "inline-flex items-center" };
const _hoisted_2$i = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("svg", {
  class: "w-4 h-4 ml-2",
  fill: "none",
  stroke: "currentColor",
  viewBox: "0 0 24 24",
  xmlns: "http://www.w3.org/2000/svg"
}, [
  /* @__PURE__ */ createElementVNode("path", {
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M19 9l-7 7-7-7"
  })
], -1));
const _sfc_main$p = /* @__PURE__ */ defineComponent({
  __name: "Dropdown",
  props: {
    placement: {
      type: String,
      default: "bottom"
    },
    text: {
      type: String,
      default: ""
    },
    transition: {
      type: [String, null],
      default: null
    }
  },
  setup(__props) {
    const props = __props;
    const visible = ref(false);
    const onHide = () => visible.value = false;
    const onToggle = () => visible.value = !visible.value;
    const placementTransitionMap = {
      bottom: "to-bottom",
      left: "to-left",
      right: "to-right",
      top: "to-top"
    };
    const transitionName = computed(() => {
      if (props.transition === null)
        return placementTransitionMap[props.placement];
      return props.transition;
    });
    const content = ref();
    const wrapper = ref();
    const { contentClasses, contentStyles } = useDropdownClasses({
      placement: toRef(props, "placement"),
      visible,
      contentRef: content
    });
    onClickOutside(wrapper, () => {
      if (!visible.value)
        return;
      visible.value = false;
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: "inline-flex relative",
        ref_key: "wrapper",
        ref: wrapper
      }, [
        createElementVNode("div", _hoisted_1$k, [
          createVNode(_sfc_main$q, { onClick: onToggle }, {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "trigger", {}, () => [
                createVNode(_sfc_main$w, null, {
                  suffix: withCtx(() => [
                    _hoisted_2$i
                  ]),
                  default: withCtx(() => [
                    createTextVNode(toDisplayString(__props.text) + " ", 1)
                  ]),
                  _: 1
                })
              ], true)
            ]),
            _: 3
          })
        ]),
        createVNode(Transition, { name: unref(transitionName) }, {
          default: withCtx(() => [
            visible.value ? (openBlock(), createElementBlock("div", {
              key: 0,
              ref_key: "content",
              ref: content,
              style: normalizeStyle(unref(contentStyles)),
              class: normalizeClass([unref(contentClasses)])
            }, [
              createVNode(_sfc_main$q, { onClick: onHide }, {
                default: withCtx(() => [
                  renderSlot(_ctx.$slots, "default", {}, void 0, true)
                ]),
                _: 3
              })
            ], 6)) : createCommentVNode("", true)
          ]),
          _: 3
        }, 8, ["name"])
      ], 512);
    };
  }
});
var Dropdown = /* @__PURE__ */ _export_sfc(_sfc_main$p, [["__scopeId", "data-v-7c2b4ef2"]]);
const _sfc_main$o = /* @__PURE__ */ defineComponent({
  __name: "FlowbiteThemable",
  props: {
    theme: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    provide(FLOWBITE_THEMABLE_INJECTION_KEY, toRef(props, "theme"));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        renderSlot(_ctx.$slots, "default")
      ]);
    };
  }
});
const breadcrumbDefaultClasses = "inline-flex items-center space-x-1 md:space-x-3";
const breadcrumbWrapperVariantClasses = {
  default: "flex",
  solid: "flex px-5 py-3 text-gray-700 border border-gray-200 rounded-lg bg-gray-50 dark:bg-gray-800 dark:border-gray-700"
};
function useBreadcrumbClasses(props) {
  const breadcrumbClasses = computed(() => {
    return classNames(
      breadcrumbDefaultClasses
    );
  });
  const breadcrumbWrapperClasses = computed(() => {
    return classNames(
      breadcrumbWrapperVariantClasses[props.solid.value ? "solid" : "defauilt"]
    );
  });
  return {
    breadcrumbClasses,
    breadcrumbWrapperClasses
  };
}
const _sfc_main$n = /* @__PURE__ */ defineComponent({
  __name: "Breadcrumb",
  props: {
    solid: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    const props = __props;
    const { breadcrumbWrapperClasses, breadcrumbClasses } = useBreadcrumbClasses(toRefs(props));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("nav", {
        class: normalizeClass(unref(breadcrumbWrapperClasses)),
        "aria-label": "Breadcrumb"
      }, [
        createElementVNode("ol", {
          class: normalizeClass(unref(breadcrumbClasses))
        }, [
          renderSlot(_ctx.$slots, "default")
        ], 2)
      ], 2);
    };
  }
});
const breadcrumbItemDefaultClasses = "ml-1 inline-flex items-center text-sm font-medium dark:text-gray-400";
const breadcrumbItemLinkClasses = "text-gray-700 hover:text-gray-900 dark:hover:text-white";
const breadcrumbSpanClasses = "text-gray-500";
function useBreadcrumbItemClasses(props) {
  const breadcrumbItemClasses = computed(() => {
    return classNames(
      breadcrumbItemDefaultClasses,
      props.href.value ? breadcrumbItemLinkClasses : breadcrumbSpanClasses
    );
  });
  return {
    breadcrumbItemClasses
  };
}
const _hoisted_1$j = { class: "inline-flex items-center" };
const _hoisted_2$h = {
  key: 0,
  class: "w-6 h-6 text-gray-400 mr-1",
  fill: "currentColor",
  viewBox: "0 0 20 20",
  xmlns: "http://www.w3.org/2000/svg"
};
const _hoisted_3$a = /* @__PURE__ */ createElementVNode("path", {
  "fill-rule": "evenodd",
  d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
  "clip-rule": "evenodd"
}, null, -1);
const _hoisted_4$4 = [
  _hoisted_3$a
];
const _hoisted_5$4 = {
  key: 0,
  class: "w-4 h-4 mr-2",
  fill: "currentColor",
  viewBox: "0 0 20 20",
  xmlns: "http://www.w3.org/2000/svg"
};
const _hoisted_6$2 = /* @__PURE__ */ createElementVNode("path", { d: "M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z" }, null, -1);
const _hoisted_7$2 = [
  _hoisted_6$2
];
const _sfc_main$m = /* @__PURE__ */ defineComponent({
  __name: "BreadcrumbItem",
  props: {
    href: {
      type: String,
      default: null
    },
    home: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    const props = __props;
    const breadcrumbElementType = computed(() => {
      return props.href ? "a" : "span";
    });
    const { breadcrumbItemClasses } = useBreadcrumbItemClasses(toRefs(props));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("li", _hoisted_1$j, [
        renderSlot(_ctx.$slots, "arrow-icon", {}, () => [
          !__props.home ? (openBlock(), createElementBlock("svg", _hoisted_2$h, _hoisted_4$4)) : createCommentVNode("", true)
        ]),
        (openBlock(), createBlock(resolveDynamicComponent(unref(breadcrumbElementType)), {
          href: __props.href,
          class: normalizeClass(unref(breadcrumbItemClasses))
        }, {
          default: withCtx(() => [
            renderSlot(_ctx.$slots, "home-icon", {}, () => [
              __props.home ? (openBlock(), createElementBlock("svg", _hoisted_5$4, _hoisted_7$2)) : createCommentVNode("", true)
            ]),
            renderSlot(_ctx.$slots, "default")
          ]),
          _: 3
        }, 8, ["href", "class"]))
      ]);
    };
  }
});
const avatarSizeClasses = {
  xs: "w-6 h-6",
  sm: "w-8 h-8",
  md: "w-10 h-10",
  lg: "w-20 h-20",
  xl: "w-36 h-36"
};
const avatarTypeClasses = {
  default: "rounded",
  rounded: "rounded-full"
};
const avatarBorderedClasses = "ring-2 ring-gray-300 dark:ring-gray-500 p-1";
const avatarStatusDotDefaultClasses = "absolute h-3.5 w-3.5 rounded-full border-2 border-white dark:border-gray-800";
const avatarStatusDotClasses = {
  away: "bg-gray-400",
  busy: "bg-yellow-400",
  offline: "bg-red-400",
  online: "bg-green-400"
};
const avatarStatusDotPositionClasses = {
  "top-right-rounded": "top-0 -right-0.5",
  "top-right-default": "-top-1.5 -right-1.5",
  "top-left-rounded": "top-0 left-0",
  "top-left-default": "top-0 left-0 transform -translate-y-1/2 -translate-x-1/2",
  "bottom-right-rounded": "bottom-0 -right-0.5",
  "bottom-right-default": "bottom-0 -right-1.5 translate-y-1/2",
  "bottom-left-rounded": "bottom-0 left-0",
  "bottom-left-default": "-bottom-1.5 left-0 transform -translate-x-1/2 "
};
const avatarPlaceholderDefaultClasses = "absolute w-auto h-auto text-gray-400";
const avatarPlaceholderWrapperDefaultClasses = "inline-flex overflow-hidden relative justify-center items-center bg-gray-100 dark:bg-gray-600";
const avatarPlaceholderInitialsDefaultClasses = "font-medium text-gray-600 dark:text-gray-300";
const avatarPlaceholderSizes = {
  xs: "bottom-0",
  sm: "bottom-0",
  md: "-bottom-1",
  lg: "-bottom-2",
  xl: "-bottom-4"
};
function useAvatarClasses(props) {
  const avatarClasses = computed(() => {
    return classNames(
      avatarSizeClasses[props.size.value],
      avatarTypeClasses[props.rounded.value ? "rounded" : "default"],
      props.bordered.value ? avatarBorderedClasses : "",
      props.stacked.value ? "border-2 border-white dark:border-gray-800" : ""
    );
  });
  const avatarDotClasses = computed(() => {
    const avatarType = `${props.statusPosition.value}-${props.rounded.value ? "rounded" : "default"}`;
    return classNames(
      avatarStatusDotDefaultClasses,
      avatarStatusDotClasses[props.status.value],
      avatarStatusDotPositionClasses[avatarType]
    );
  });
  const avatarPlaceholderClasses = computed(() => {
    return classNames(
      avatarPlaceholderDefaultClasses,
      avatarPlaceholderSizes[props.size.value]
    );
  });
  const avatarPlaceholderWrapperClasses = computed(() => {
    return classNames(
      avatarPlaceholderWrapperDefaultClasses,
      avatarSizeClasses[props.size.value],
      avatarTypeClasses[props.rounded.value ? "rounded" : "default"]
    );
  });
  const avatarPlaceholderInitialsClasses = computed(() => {
    return classNames(
      avatarPlaceholderInitialsDefaultClasses
    );
  });
  return {
    avatarClasses,
    avatarDotClasses,
    avatarPlaceholderClasses,
    avatarPlaceholderWrapperClasses,
    avatarPlaceholderInitialsClasses
  };
}
const _hoisted_1$i = { class: "relative" };
const _hoisted_2$g = /* @__PURE__ */ createElementVNode("path", {
  "fill-rule": "evenodd",
  d: "M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z",
  "clip-rule": "evenodd"
}, null, -1);
const _hoisted_3$9 = [
  _hoisted_2$g
];
const _hoisted_4$3 = ["src", "alt"];
const _hoisted_5$3 = ["data-pos"];
const _sfc_main$l = /* @__PURE__ */ defineComponent({
  __name: "Avatar",
  props: {
    alt: {
      type: String,
      default: "Avatar"
    },
    bordered: {
      type: Boolean,
      default: false
    },
    img: {
      type: String,
      default: ""
    },
    rounded: {
      type: Boolean,
      default: false
    },
    size: {
      type: String,
      default: "md"
    },
    stacked: {
      type: Boolean,
      default: false
    },
    status: {
      type: String,
      default: null
    },
    statusPosition: {
      type: String,
      default: "top-right"
    },
    initials: {
      type: String,
      default: null
    }
  },
  setup(__props) {
    const props = __props;
    const { avatarClasses, avatarDotClasses, avatarPlaceholderClasses, avatarPlaceholderWrapperClasses, avatarPlaceholderInitialsClasses } = useAvatarClasses(toRefs(props));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1$i, [
        !__props.img ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(unref(avatarPlaceholderWrapperClasses))
        }, [
          !__props.initials ? (openBlock(), createElementBlock("svg", {
            key: 0,
            class: normalizeClass(unref(avatarPlaceholderClasses)),
            fill: "currentColor",
            viewBox: "0 0 20 20",
            xmlns: "http://www.w3.org/2000/svg"
          }, _hoisted_3$9, 2)) : (openBlock(), createElementBlock("div", {
            key: 1,
            class: normalizeClass(unref(avatarPlaceholderInitialsClasses))
          }, toDisplayString(__props.initials), 3))
        ], 2)) : (openBlock(), createElementBlock("img", {
          key: 1,
          class: normalizeClass(unref(avatarClasses)),
          src: __props.img,
          alt: __props.alt
        }, null, 10, _hoisted_4$3)),
        __props.status ? (openBlock(), createElementBlock("span", {
          key: 2,
          class: normalizeClass(unref(avatarDotClasses)),
          "data-pos": __props.statusPosition
        }, null, 10, _hoisted_5$3)) : createCommentVNode("", true)
      ]);
    };
  }
});
const _sfc_main$k = {};
const _hoisted_1$h = { class: "flex -space-x-4" };
function _sfc_render$1(_ctx, _cache) {
  return openBlock(), createElementBlock("div", _hoisted_1$h, [
    renderSlot(_ctx.$slots, "default")
  ]);
}
var StackedAvatars = /* @__PURE__ */ _export_sfc(_sfc_main$k, [["render", _sfc_render$1]]);
const _hoisted_1$g = ["href"];
const _sfc_main$j = {
  __name: "StackedAvatarsCounter",
  props: {
    total: {
      type: Number,
      default: 1
    },
    href: {
      type: String,
      default: "#"
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("a", {
        class: "relative flex justify-center items-center w-10 h-10 text-xs font-medium text-white bg-gray-700 rounded-full border-2 border-white hover:bg-gray-600 dark:border-gray-800",
        href: __props.href
      }, "+" + toDisplayString(__props.total), 9, _hoisted_1$g);
    };
  }
};
const _hoisted_1$f = {
  id: "accordion-collapse",
  "data-accordion": "collapse"
};
const _hoisted_2$f = /* @__PURE__ */ createStaticVNode('<h2 id="accordion-collapse-heading-1"><button type="button" class="flex justify-between items-center p-5 w-full font-medium text-left text-gray-500 rounded-t-xl border border-b-0 border-gray-200 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800" data-accordion-target="#accordion-collapse-body-1" aria-expanded="true" aria-controls="accordion-collapse-body-1"><span>What is Flowbite?</span><svg data-accordion-icon class="w-6 h-6 rotate-180 shrink-0" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></button></h2><div id="accordion-collapse-body-1" class="hidden" aria-labelledby="accordion-collapse-heading-1"><div class="p-5 border border-b-0 border-gray-200 dark:border-gray-700 dark:bg-gray-900"><p class="mb-2 text-gray-500 dark:text-gray-400">Flowbite is an open-source library of interactive components built on top of Tailwind CSS including buttons, dropdowns, modals, navbars, and more.</p><p class="text-gray-500 dark:text-gray-400">Check out this guide to learn how to <a href="/docs/getting-started/introduction/" class="text-blue-600 dark:text-blue-500 hover:underline">get started</a> and start developing websites even faster with components on top of Tailwind CSS.</p></div></div><h2 id="accordion-collapse-heading-2"><button type="button" class="flex justify-between items-center p-5 w-full font-medium text-left text-gray-500 border border-b-0 border-gray-200 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800" data-accordion-target="#accordion-collapse-body-2" aria-expanded="false" aria-controls="accordion-collapse-body-2"><span>Is there a Figma file available?</span><svg data-accordion-icon class="w-6 h-6 shrink-0" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></button></h2><div id="accordion-collapse-body-2" class="hidden" aria-labelledby="accordion-collapse-heading-2"><div class="p-5 border border-b-0 border-gray-200 dark:border-gray-700"><p class="mb-2 text-gray-500 dark:text-gray-400">Flowbite is first conceptualized and designed using the Figma software so everything you see in the library has a design equivalent in our Figma file.</p><p class="text-gray-500 dark:text-gray-400">Check out the <a href="https://flowbite.com/figma/" class="text-blue-600 dark:text-blue-500 hover:underline">Figma design system</a> based on the utility classes from Tailwind CSS and components from Flowbite.</p></div></div><h2 id="accordion-collapse-heading-3"><button type="button" class="flex justify-between items-center p-5 w-full font-medium text-left text-gray-500 border border-gray-200 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800" data-accordion-target="#accordion-collapse-body-3" aria-expanded="false" aria-controls="accordion-collapse-body-3"><span>What are the differences between Flowbite and Tailwind UI?</span><svg data-accordion-icon class="w-6 h-6 shrink-0" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></button></h2><div id="accordion-collapse-body-3" class="hidden" aria-labelledby="accordion-collapse-heading-3"><div class="p-5 border border-t-0 border-gray-200 dark:border-gray-700"><p class="mb-2 text-gray-500 dark:text-gray-400">The main difference is that the core components from Flowbite are open source under the MIT license, whereas Tailwind UI is a paid product. Another difference is that Flowbite relies on smaller and standalone components, whereas Tailwind UI offers sections of pages.</p><p class="mb-2 text-gray-500 dark:text-gray-400">However, we actually recommend using both Flowbite, Flowbite Pro, and even Tailwind UI as there is no technical reason stopping you from using the best of two worlds.</p><p class="mb-2 text-gray-500 dark:text-gray-400">Learn more about these technologies:</p><ul class="pl-5 list-disc text-gray-500 dark:text-gray-400"><li><a href="https://flowbite.com/pro/" class="text-blue-600 dark:text-blue-500 hover:underline">Flowbite Pro</a></li><li><a href="https://tailwindui.com/" rel="nofollow" class="text-blue-600 dark:text-blue-500 hover:underline">Tailwind UI</a></li></ul></div></div>', 6);
const _hoisted_8$1 = [
  _hoisted_2$f
];
const _sfc_main$i = /* @__PURE__ */ defineComponent({
  __name: "Accordion",
  props: {
    alwaysOpen: {
      type: Boolean,
      default: false
    },
    arrowIcon: {
      type: String,
      default: ""
    },
    children: {
      type: Array,
      default() {
        return [];
      }
    },
    flush: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1$f, _hoisted_8$1);
    };
  }
});
const defaultBadgeClasses = "mr-2 px-2.5 py-0.5 rounded flex items-center justify-center";
const badgeLinkClasses = "bg-blue-100 hover:bg-blue-200 text-blue-800 dark:text-blue-800 dark:hover:bg-blue-300";
const onlyIconClasses = "p-1 rounded-full mr-2";
const badgeTextClasses = {
  default: "text-blue-800 dark:text-blue-800",
  dark: "text-gray-800 dark:bg-gray-700",
  red: "text-red-800 dark:text-red-900",
  green: "text-green-800 dark:text-green-900",
  yellow: "text-yellow-800 dark:text-yellow-900",
  indigo: "text-indigo-800 dark:text-indigo-900",
  purple: "text-purple-800 dark:text-purple-900",
  pink: "text-pink-800 dark:text-pink-900"
};
const badgeTypeClasses = {
  default: "bg-blue-100 dark:bg-blue-200",
  dark: "bg-gray-100 dark:bg-gray-700",
  red: "bg-red-100 dark:bg-red-200",
  green: "bg-green-100 dark:bg-green-200",
  yellow: "bg-yellow-100 dark:bg-yellow-200",
  indigo: "bg-indigo-100 dark:bg-indigo-200",
  purple: "bg-purple-100 dark:bg-purple-200",
  pink: "bg-pink-100 dark:bg-pink-200"
};
const badgeSizeClasses = {
  xs: "text-xs font-semibold",
  sm: "text-sm font-medium"
};
function useBadgeClasses(props, options) {
  const badgeClasses = computed(() => {
    return classNames(
      badgeSizeClasses[props.size.value],
      props.href.value ? "" : badgeTypeClasses[props.type.value],
      props.href.value ? "" : badgeTextClasses[props.type.value],
      props.href.value ? badgeLinkClasses : "",
      options.isContentEmpty.value ? onlyIconClasses : defaultBadgeClasses
    );
  });
  return {
    badgeClasses
  };
}
const _sfc_main$h = /* @__PURE__ */ defineComponent({
  __name: "Badge",
  props: {
    type: {
      type: String,
      default: "default"
    },
    size: {
      type: String,
      default: "xs"
    },
    href: {
      type: String,
      default: null
    }
  },
  setup(__props) {
    const props = __props;
    const slots = useSlots();
    const isContentEmpty = computed(() => !slots.default);
    const wrapperType = computed(() => props.href ? "a" : "span");
    const { badgeClasses } = useBadgeClasses(toRefs(props), { isContentEmpty });
    return (_ctx, _cache) => {
      return openBlock(), createBlock(resolveDynamicComponent(unref(wrapperType)), {
        class: normalizeClass(unref(badgeClasses)),
        href: __props.href
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, "icon"),
          renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["class", "href"]);
    };
  }
});
function useCardsClasses(props) {
  const cardClasses = computed(() => {
    if (props.variant.value === "default")
      return "block max-w-sm bg-white rounded-lg border border-gray-200 shadow-md hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700";
    else if (props.variant.value === "image")
      return "max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700";
    else if (props.variant.value === "horizontal")
      return "flex flex-col items-center bg-white rounded-lg border shadow-md md:flex-row md:max-w-xl hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700";
    return "";
  });
  const horizontalImageClasses = computed(() => {
    if (props.variant.value === "horizontal")
      return "object-cover w-full h-96 rounded-t-lg md:h-auto md:w-48 md:rounded-none md:rounded-l-lg";
    return "";
  });
  return {
    cardClasses,
    horizontalImageClasses
  };
}
const _hoisted_1$e = ["src", "alt"];
const _hoisted_2$e = { class: "p-6" };
const _sfc_main$g = /* @__PURE__ */ defineComponent({
  __name: "TheCard",
  props: {
    href: {
      type: String,
      default: ""
    },
    imgAlt: {
      type: String,
      default: ""
    },
    imgSrc: {
      type: String,
      default: ""
    },
    variant: {
      type: String,
      default: "default"
    }
  },
  setup(__props) {
    const props = __props;
    const { cardClasses, horizontalImageClasses } = useCardsClasses(toRefs(props));
    const wrapperType = computed(() => props.href ? "a" : "div");
    return (_ctx, _cache) => {
      return openBlock(), createBlock(resolveDynamicComponent(unref(wrapperType)), {
        href: __props.href,
        class: normalizeClass(unref(cardClasses))
      }, {
        default: withCtx(() => [
          __props.imgSrc ? (openBlock(), createElementBlock("img", {
            key: 0,
            class: normalizeClass(["rounded-t-lg", unref(horizontalImageClasses)]),
            src: __props.imgSrc,
            alt: __props.imgAlt
          }, null, 10, _hoisted_1$e)) : createCommentVNode("", true),
          createElementVNode("div", _hoisted_2$e, [
            renderSlot(_ctx.$slots, "default")
          ])
        ]),
        _: 3
      }, 8, ["href", "class"]);
    };
  }
});
const _hoisted_1$d = {
  id: "default-carousel",
  class: "relative",
  "data-carousel": "static"
};
const _hoisted_2$d = /* @__PURE__ */ createStaticVNode('<div class="overflow-hidden relative h-56 rounded-lg sm:h-64 xl:h-80 2xl:h-96"><div class="hidden duration-700 ease-in-out" data-carousel-item><span class="absolute top-1/2 left-1/2 text-2xl font-semibold text-white -translate-x-1/2 -translate-y-1/2 sm:text-3xl dark:text-gray-800">First Slide</span></div><div class="hidden duration-700 ease-in-out" data-carousel-item></div><div class="hidden duration-700 ease-in-out" data-carousel-item></div></div><div class="flex absolute bottom-5 left-1/2 z-30 space-x-3 -translate-x-1/2"><button type="button" class="w-3 h-3 rounded-full" aria-current="false" aria-label="Slide 1" data-carousel-slide-to="0"></button><button type="button" class="w-3 h-3 rounded-full" aria-current="false" aria-label="Slide 2" data-carousel-slide-to="1"></button><button type="button" class="w-3 h-3 rounded-full" aria-current="false" aria-label="Slide 3" data-carousel-slide-to="2"></button></div><button type="button" class="flex absolute top-0 left-0 z-30 justify-center items-center px-4 h-full cursor-pointer group focus:outline-none" data-carousel-prev><span class="inline-flex justify-center items-center w-8 h-8 rounded-full sm:w-10 sm:h-10 bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"><svg class="w-5 h-5 text-white sm:w-6 sm:h-6 dark:text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path></svg><span class="hidden">Previous</span></span></button><button type="button" class="flex absolute top-0 right-0 z-30 justify-center items-center px-4 h-full cursor-pointer group focus:outline-none" data-carousel-next><span class="inline-flex justify-center items-center w-8 h-8 rounded-full sm:w-10 sm:h-10 bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none"><svg class="w-5 h-5 text-white sm:w-6 sm:h-6 dark:text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg><span class="hidden">Next</span></span></button>', 4);
const _hoisted_6$1 = [
  _hoisted_2$d
];
const _sfc_main$f = /* @__PURE__ */ defineComponent({
  __name: "Carousel",
  props: {
    children: {
      type: Array,
      default() {
        return [];
      }
    },
    indicators: {
      type: Boolean,
      default: true
    },
    slide: {
      type: Boolean,
      default: true
    },
    slideInterval: {
      type: Number,
      default: 3e3
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1$d, _hoisted_6$1);
    };
  }
});
const _hoisted_1$c = { class: "p-4 bg-white rounded-lg shadow md:flex md:items-center md:justify-between md:p-6 dark:bg-gray-800" };
const _hoisted_2$c = /* @__PURE__ */ createStaticVNode('<span class="text-sm text-gray-500 sm:text-center dark:text-gray-400">\xA9 2022 <a href="https://flowbite.com/" class="hover:underline">Flowbite\u2122</a>. All Rights Reserved. </span><ul class="flex flex-wrap items-center mt-3 text-sm text-gray-500 dark:text-gray-400 sm:mt-0"><li><a href="#" class="mr-4 hover:underline md:mr-6">About</a></li><li><a href="#" class="mr-4 hover:underline md:mr-6">Privacy Policy</a></li><li><a href="#" class="mr-4 hover:underline md:mr-6">Licensing</a></li><li><a href="#" class="hover:underline">Contact</a></li></ul>', 2);
const _hoisted_4$2 = [
  _hoisted_2$c
];
const _sfc_main$e = /* @__PURE__ */ defineComponent({
  __name: "Footer",
  props: {
    children: {
      type: Array,
      default() {
        return [];
      }
    },
    bgDark: {
      type: Boolean,
      default: false
    },
    container: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("footer", _hoisted_1$c, _hoisted_4$2);
    };
  }
});
const defaultContainerClasses = "overflow-hidden w-48 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg dark:bg-gray-700 dark:border-gray-600 dark:text-white";
function useListGroupClasses() {
  const containerClasses = computed(() => {
    return classNames(
      defaultContainerClasses
    );
  });
  return {
    containerClasses
  };
}
const _sfc_main$d = /* @__PURE__ */ defineComponent({
  __name: "ListGroup",
  setup(__props) {
    const { containerClasses } = useListGroupClasses();
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("ul", {
        class: normalizeClass(unref(containerClasses))
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 2);
    };
  }
});
const defaultItemClasses = "inline-flex items-center w-full px-4 py-2 border-b border-gray-200 dark:border-gray-600";
const hoverItemClasses = "block w-full px-4 py-2 cursor-pointer hover:bg-gray-100 hover:text-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:hover:bg-gray-600 dark:hover:text-white dark:focus:ring-gray-500 dark:focus:text-white";
const disabledItemClasses = "bg-gray-100 cursor-not-allowed dark:bg-gray-600 dark:text-gray-400";
function useListGroupItemClasses(props) {
  const itemClasses = computed(() => {
    return simplifyTailwindClasses(
      defaultItemClasses,
      props.disabled.value ? disabledItemClasses : "",
      !props.disabled.value && props.hover.value ? hoverItemClasses : ""
    );
  });
  return {
    itemClasses
  };
}
const _hoisted_1$b = {
  key: 0,
  class: "mr-2"
};
const _hoisted_2$b = {
  key: 1,
  class: "ml-2"
};
const _sfc_main$c = /* @__PURE__ */ defineComponent({
  __name: "ListGroupItem",
  props: {
    hover: {
      type: Boolean,
      default: true
    },
    disabled: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    const props = __props;
    const { itemClasses } = useListGroupItemClasses(toRefs(props));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("li", {
        class: normalizeClass(unref(itemClasses))
      }, [
        _ctx.$slots.prefix ? (openBlock(), createElementBlock("div", _hoisted_1$b, [
          renderSlot(_ctx.$slots, "prefix")
        ])) : createCommentVNode("", true),
        renderSlot(_ctx.$slots, "default"),
        _ctx.$slots.suffix ? (openBlock(), createElementBlock("div", _hoisted_2$b, [
          renderSlot(_ctx.$slots, "suffix")
        ])) : createCommentVNode("", true)
      ], 2);
    };
  }
});
const _hoisted_1$a = {
  id: "defaultModal",
  tabindex: "-1",
  "aria-hidden": "true",
  class: "hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 w-full md:inset-0 h-modal md:h-full"
};
const _hoisted_2$a = /* @__PURE__ */ createStaticVNode('<div class="relative p-4 w-full max-w-2xl h-full md:h-auto"><div class="relative bg-white rounded-lg shadow dark:bg-gray-700"><div class="flex justify-between items-start p-4 rounded-t border-b dark:border-gray-600"><h3 class="text-xl font-semibold text-gray-900 dark:text-white"> Terms of Service </h3><button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-toggle="defaultModal"><svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></button></div><div class="p-6 space-y-6"><p class="text-base leading-relaxed text-gray-500 dark:text-gray-400"> With less than a month to go before the European Union enacts new consumer privacy laws for its citizens, companies around the world are updating their terms of service agreements to comply. </p><p class="text-base leading-relaxed text-gray-500 dark:text-gray-400"> The European Union\u2019s General Data Protection Regulation (G.D.P.R.) goes into effect on May 25 and is meant to ensure a common set of data rights in the European Union. It requires organizations to notify users as soon as possible of high-risk data breaches that could personally affect them. </p></div><div class="flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600"><button data-modal-toggle="defaultModal" type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">I accept</button><button data-modal-toggle="defaultModal" type="button" class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">Decline</button></div></div></div>', 1);
const _hoisted_3$8 = [
  _hoisted_2$a
];
const _sfc_main$b = /* @__PURE__ */ defineComponent({
  __name: "Modal",
  props: {
    children: {
      type: Array,
      default() {
        return [];
      }
    },
    popup: {
      type: Boolean,
      default: false
    },
    position: {
      type: String,
      default: "center"
    },
    show: {
      type: Boolean,
      default: false
    },
    size: {
      type: String,
      default: "2xl"
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1$a, _hoisted_3$8);
    };
  }
});
const _hoisted_1$9 = { class: "bg-white border-gray-200 px-2 sm:px-4 py-2.5 rounded dark:bg-gray-800" };
const _hoisted_2$9 = /* @__PURE__ */ createStaticVNode('<div class="container flex flex-wrap justify-between items-center mx-auto"><a href="https://flowbite.com/" class="flex items-center"><span class="self-center text-xl font-semibold whitespace-nowrap dark:text-white">Flowbite</span></a><button data-collapse-toggle="mobile-menu" type="button" class="inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="mobile-menu" aria-expanded="false"><span class="sr-only">Open main menu</span><svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path></svg><svg class="hidden w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></button><div class="hidden w-full md:block md:w-auto" id="mobile-menu"><ul class="flex flex-col mt-4 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium"><li><a href="#" class="block py-2 pr-4 pl-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 dark:text-white" aria-current="page">Home</a></li><li><a href="#" class="block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">About</a></li><li><a href="#" class="block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Services</a></li><li><a href="#" class="block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Pricing</a></li><li><a href="#" class="block py-2 pr-4 pl-3 text-gray-700 hover:bg-gray-50 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Contact</a></li></ul></div></div>', 1);
const _hoisted_3$7 = [
  _hoisted_2$9
];
const _sfc_main$a = /* @__PURE__ */ defineComponent({
  __name: "Navbar",
  props: {
    border: {
      type: Boolean,
      default: false
    },
    children: {
      type: Array,
      default() {
        return [];
      }
    },
    className: {
      type: String,
      default: ""
    },
    fluid: {
      type: Boolean,
      default: false
    },
    menuOpen: {
      type: Boolean,
      default: false
    },
    rounded: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("nav", _hoisted_1$9, _hoisted_3$7);
    };
  }
});
const _hoisted_1$8 = { "aria-label": "Page navigation example" };
const _hoisted_2$8 = /* @__PURE__ */ createStaticVNode('<ul class="inline-flex -space-x-px"><li><a href="#" class="py-2 px-3 ml-0 leading-tight text-gray-500 bg-white rounded-l-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">Previous</a></li><li><a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">1</a></li><li><a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">2</a></li><li><a href="#" aria-current="page" class="py-2 px-3 text-blue-600 bg-blue-50 border border-gray-300 hover:bg-blue-100 hover:text-blue-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white">3</a></li><li><a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">4</a></li><li><a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">5</a></li><li><a href="#" class="py-2 px-3 leading-tight text-gray-500 bg-white rounded-r-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">Next</a></li></ul>', 1);
const _hoisted_3$6 = [
  _hoisted_2$8
];
const _sfc_main$9 = /* @__PURE__ */ defineComponent({
  __name: "Pagination",
  props: {
    currentPage: {
      type: Number,
      default: 1
    },
    layout: {
      type: String,
      default: "pagination"
    },
    showIcons: {
      type: Boolean,
      default: false
    },
    totalPages: {
      type: Number,
      default: 1
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("nav", _hoisted_1$8, _hoisted_3$6);
    };
  }
});
const _hoisted_1$7 = { class: "w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700" };
const _hoisted_2$7 = /* @__PURE__ */ createElementVNode("div", {
  class: "bg-blue-600 h-2.5 rounded-full",
  style: { "width": "45%" }
}, null, -1);
const _hoisted_3$5 = [
  _hoisted_2$7
];
const _sfc_main$8 = /* @__PURE__ */ defineComponent({
  __name: "Progress",
  props: {
    color: {
      type: String,
      default: "blue"
    },
    label: {
      type: String,
      default: "progressbar"
    },
    labelPosition: {
      type: String,
      default: "none"
    },
    labelProgress: {
      type: Boolean,
      default: false
    },
    progress: {
      type: Number,
      default: 0
    },
    size: {
      type: String,
      default: "md"
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1$7, _hoisted_3$5);
    };
  }
});
const _hoisted_1$6 = { class: "flex items-center" };
const _hoisted_2$6 = /* @__PURE__ */ createStaticVNode('<svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path></svg><svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path></svg><svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path></svg><svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path></svg><svg class="w-5 h-5 text-gray-300 dark:text-gray-500" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path></svg>', 5);
const _hoisted_7$1 = [
  _hoisted_2$6
];
const _sfc_main$7 = /* @__PURE__ */ defineComponent({
  __name: "Rating",
  props: {
    size: {
      type: String,
      default: "sm"
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1$6, _hoisted_7$1);
    };
  }
});
const _hoisted_1$5 = {
  class: "w-64",
  "aria-label": "Sidebar"
};
const _hoisted_2$5 = /* @__PURE__ */ createStaticVNode('<div class="overflow-y-auto py-4 px-3 bg-gray-50 rounded dark:bg-gray-800"><ul class="space-y-2"><li><a href="#" class="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700"><svg class="w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z"></path><path d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z"></path></svg><span class="ml-3">Dashboard</span></a></li><li><a href="#" class="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700"><svg class="flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path></svg><span class="flex-1 ml-3 whitespace-nowrap">Kanban</span><span class="inline-flex justify-center items-center px-2 ml-3 text-sm font-medium text-gray-800 bg-gray-200 rounded-full dark:bg-gray-700 dark:text-gray-300">Pro</span></a></li><li><a href="#" class="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700"><svg class="flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M8.707 7.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L11 7.586V3a1 1 0 10-2 0v4.586l-.293-.293z"></path><path d="M3 5a2 2 0 012-2h1a1 1 0 010 2H5v7h2l1 2h4l1-2h2V5h-1a1 1 0 110-2h1a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5z"></path></svg><span class="flex-1 ml-3 whitespace-nowrap">Inbox</span><span class="inline-flex justify-center items-center p-3 ml-3 w-3 h-3 text-sm font-medium text-blue-600 bg-blue-200 rounded-full dark:bg-blue-900 dark:text-blue-200">3</span></a></li><li><a href="#" class="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700"><svg class="flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path></svg><span class="flex-1 ml-3 whitespace-nowrap">Users</span></a></li><li><a href="#" class="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700"><svg class="flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z" clip-rule="evenodd"></path></svg><span class="flex-1 ml-3 whitespace-nowrap">Products</span></a></li><li><a href="#" class="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700"><svg class="flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z" clip-rule="evenodd"></path></svg><span class="flex-1 ml-3 whitespace-nowrap">Sign In</span></a></li><li><a href="#" class="flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700"><svg class="flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z" clip-rule="evenodd"></path></svg><span class="flex-1 ml-3 whitespace-nowrap">Sign Up</span></a></li></ul></div>', 1);
const _hoisted_3$4 = [
  _hoisted_2$5
];
const _sfc_main$6 = /* @__PURE__ */ defineComponent({
  __name: "Sidebar",
  props: {
    children: {
      type: Array,
      default() {
        return [];
      }
    },
    collapseBehavior: {
      type: String,
      default: "collapse"
    },
    collapsed: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("aside", _hoisted_1$5, _hoisted_3$4);
    };
  }
});
const _hoisted_1$4 = { class: "relative overflow-x-auto shadow-md sm:rounded-lg" };
const _hoisted_2$4 = /* @__PURE__ */ createStaticVNode('<table class="w-full text-sm text-left text-gray-500 dark:text-gray-400"><thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"><tr><th scope="col" class="px-6 py-3"> Product name </th><th scope="col" class="px-6 py-3"> Color </th><th scope="col" class="px-6 py-3"> Category </th><th scope="col" class="px-6 py-3"> Price </th><th scope="col" class="px-6 py-3"><span class="sr-only">Edit</span></th></tr></thead><tbody><tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700"><th scope="row" class="px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap"> Apple MacBook Pro 17&quot; </th><td class="px-6 py-4"> Sliver </td><td class="px-6 py-4"> Laptop </td><td class="px-6 py-4"> $2999 </td><td class="px-6 py-4 text-right"><a href="#" class="font-medium text-blue-600 dark:text-blue-500 hover:underline">Edit</a></td></tr><tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700"><th scope="row" class="px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap"> Microsoft Surface Pro </th><td class="px-6 py-4"> White </td><td class="px-6 py-4"> Laptop PC </td><td class="px-6 py-4"> $1999 </td><td class="px-6 py-4 text-right"><a href="#" class="font-medium text-blue-600 dark:text-blue-500 hover:underline">Edit</a></td></tr><tr class="bg-white dark:bg-gray-800"><th scope="row" class="px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap"> Magic Mouse 2 </th><td class="px-6 py-4"> Black </td><td class="px-6 py-4"> Accessories </td><td class="px-6 py-4"> $99 </td><td class="px-6 py-4 text-right"><a href="#" class="font-medium text-blue-600 dark:text-blue-500 hover:underline">Edit</a></td></tr></tbody></table>', 1);
const _hoisted_3$3 = [
  _hoisted_2$4
];
const _sfc_main$5 = /* @__PURE__ */ defineComponent({
  __name: "Table",
  props: {
    children: {
      type: Array,
      default() {
        return [];
      }
    },
    striped: {
      type: Boolean,
      default: false
    },
    hoverable: {
      type: Boolean,
      default: false
    },
    className: {
      type: String,
      default: ""
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1$4, _hoisted_3$3);
    };
  }
});
const _hoisted_1$3 = { class: "relative border-l border-gray-200 dark:border-gray-700" };
const _hoisted_2$3 = /* @__PURE__ */ createStaticVNode('<li class="mb-10 ml-4"><div class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div><time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">February 2022</time><h3 class="text-lg font-semibold text-gray-900 dark:text-white">Application UI code in Tailwind CSS</h3><p class="mb-4 text-base font-normal text-gray-500 dark:text-gray-400">Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp; Marketing pages.</p><a href="#" class="inline-flex items-center py-2 px-4 text-sm font-medium text-gray-900 bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:outline-none focus:ring-gray-200 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700">Learn more <svg class="ml-2 w-3 h-3" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg></a></li><li class="mb-10 ml-4"><div class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div><time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">March 2022</time><h3 class="text-lg font-semibold text-gray-900 dark:text-white">Marketing UI design in Figma</h3><p class="text-base font-normal text-gray-500 dark:text-gray-400">All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.</p></li><li class="ml-4"><div class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div><time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">April 2022</time><h3 class="text-lg font-semibold text-gray-900 dark:text-white">E-Commerce UI code in Tailwind CSS</h3><p class="text-base font-normal text-gray-500 dark:text-gray-400">Get started with dozens of web components and interactive elements built on top of Tailwind CSS.</p></li>', 3);
const _hoisted_5$2 = [
  _hoisted_2$3
];
const _sfc_main$4 = /* @__PURE__ */ defineComponent({
  __name: "Timeline",
  props: {
    className: {
      type: String,
      default: ""
    },
    horizontal: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("ol", _hoisted_1$3, _hoisted_5$2);
    };
  }
});
const typeClassesMap = {
  danger: "text-red-500 bg-red-100 dark:bg-red-800 dark:text-red-200",
  empty: "",
  success: "text-green-500 bg-green-100 dark:bg-green-800 dark:text-green-200",
  warning: "text-orange-500 bg-orange-100 dark:bg-orange-700 dark:text-orange-200"
};
const wrapperAlignmentClasses = {
  center: "items-center",
  end: "items-end",
  start: "items-start"
};
const defaultWrapperClasses = "flex w-full max-w-xs p-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800";
const defaultContentClasses = "text-sm font-normal";
function useToastClasses(props) {
  const typeClasses = computed(() => {
    return typeClassesMap[props.type.value];
  });
  const wrapperClasses = computed(() => {
    const alignmentClass = wrapperAlignmentClasses[props.alignment.value];
    if (props.divide.value)
      return simplifyTailwindClasses(defaultWrapperClasses, "dark:divide-gray-700 divide-x divide-gray-200", alignmentClass);
    return simplifyTailwindClasses(defaultWrapperClasses, alignmentClass);
  });
  const contentClasses = computed(() => {
    if (props.type.value !== "empty" && props.divide.value)
      return simplifyTailwindClasses(defaultContentClasses, "pl-3");
    return defaultContentClasses;
  });
  return {
    typeClasses,
    wrapperClasses,
    contentClasses
  };
}
const _hoisted_1$2 = {
  key: 1,
  "aria-hidden": "true",
  class: "w-5 h-5",
  fill: "currentColor",
  viewBox: "0 0 20 20",
  xmlns: "http://www.w3.org/2000/svg"
};
const _hoisted_2$2 = /* @__PURE__ */ createElementVNode("path", {
  "fill-rule": "evenodd",
  d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z",
  "clip-rule": "evenodd"
}, null, -1);
const _hoisted_3$2 = [
  _hoisted_2$2
];
const _hoisted_4$1 = {
  key: 2,
  "aria-hidden": "true",
  class: "w-5 h-5",
  fill: "currentColor",
  viewBox: "0 0 20 20",
  xmlns: "http://www.w3.org/2000/svg"
};
const _hoisted_5$1 = /* @__PURE__ */ createElementVNode("path", {
  "fill-rule": "evenodd",
  d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
  "clip-rule": "evenodd"
}, null, -1);
const _hoisted_6 = [
  _hoisted_5$1
];
const _hoisted_7 = {
  key: 3,
  "aria-hidden": "true",
  class: "w-5 h-5",
  fill: "currentColor",
  viewBox: "0 0 20 20",
  xmlns: "http://www.w3.org/2000/svg"
};
const _hoisted_8 = /* @__PURE__ */ createElementVNode("path", {
  "fill-rule": "evenodd",
  d: "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",
  "clip-rule": "evenodd"
}, null, -1);
const _hoisted_9 = [
  _hoisted_8
];
const _hoisted_10 = /* @__PURE__ */ createElementVNode("span", { class: "sr-only" }, "Close", -1);
const _hoisted_11 = /* @__PURE__ */ createElementVNode("svg", {
  class: "w-5 h-5",
  fill: "currentColor",
  viewBox: "0 0 20 20",
  xmlns: "http://www.w3.org/2000/svg"
}, [
  /* @__PURE__ */ createElementVNode("path", {
    "fill-rule": "evenodd",
    d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
    "clip-rule": "evenodd"
  })
], -1);
const _hoisted_12 = [
  _hoisted_10,
  _hoisted_11
];
const _sfc_main$3 = /* @__PURE__ */ defineComponent({
  __name: "Toast",
  props: {
    type: {
      type: String,
      default: "empty"
    },
    alignment: {
      type: String,
      default: "center"
    },
    closable: {
      type: Boolean,
      default: false
    },
    divide: {
      type: Boolean,
      default: false
    }
  },
  emits: ["close"],
  setup(__props, { emit }) {
    const props = __props;
    const visible = ref(true);
    const { typeClasses, wrapperClasses, contentClasses } = useToastClasses(toRefs(props));
    const onClose = () => {
      emit("close");
      visible.value = false;
    };
    return (_ctx, _cache) => {
      return visible.value ? (openBlock(), createElementBlock("div", {
        key: 0,
        id: "toast-default",
        class: normalizeClass(unref(wrapperClasses)),
        role: "alert"
      }, [
        __props.type !== "empty" || _ctx.$slots.icon ? (openBlock(), createBlock(_sfc_main$x, {
          key: 0,
          class: normalizeClass([
            "inline-flex flex-shrink-0 justify-center items-center w-8 h-8 rounded-lg",
            unref(typeClasses)
          ]),
          apply: ["background", "text"]
        }, {
          default: withCtx(() => [
            _ctx.$slots.icon ? renderSlot(_ctx.$slots, "icon", {
              key: 0,
              class: normalizeClass({ "ml-3": __props.type !== "empty" })
            }) : __props.type === "success" ? (openBlock(), createElementBlock("svg", _hoisted_1$2, _hoisted_3$2)) : __props.type === "danger" ? (openBlock(), createElementBlock("svg", _hoisted_4$1, _hoisted_6)) : __props.type === "warning" ? (openBlock(), createElementBlock("svg", _hoisted_7, _hoisted_9)) : createCommentVNode("", true)
          ]),
          _: 3
        }, 8, ["class"])) : createCommentVNode("", true),
        createElementVNode("div", {
          class: normalizeClass([unref(contentClasses), { "ml-3": _ctx.$slots.icon || __props.type !== "empty" }])
        }, [
          renderSlot(_ctx.$slots, "default")
        ], 2),
        __props.closable ? (openBlock(), createElementBlock("button", {
          key: 1,
          onClick: onClose,
          type: "button",
          class: "border-none ml-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700",
          "aria-label": "Close"
        }, _hoisted_12)) : createCommentVNode("", true)
      ], 2)) : createCommentVNode("", true);
    };
  }
});
const FLOWBITE_TOAST_INJECTION_KEY = "flowbite-toast-injection-key";
var ToastProvider_css_vue_type_style_index_0_src_bd3199ec_scoped_true_lang = "";
const _sfc_main$2 = defineComponent({
  components: {
    Toast: _sfc_main$3
  },
  props: {
    transition: {
      type: String,
      default: "slide-left"
    }
  },
  setup() {
    const toasts = ref([]);
    const runRemoveTimeout = (id, ms) => {
      useTimeoutFn(() => removeToast(id), ms);
    };
    const addToast = (toast) => {
      const id = parseInt((new Date().getTime() * Math.random()).toString()).toString();
      toasts.value.push({
        id,
        ...toast
      });
      if (toast.time > 0)
        runRemoveTimeout(id, toast.time);
      return id;
    };
    const popToast = () => {
      if (toasts.value.length === 0)
        return "";
      const lastId = toasts.value[toasts.value.length - 1].id;
      toasts.value.pop();
      return lastId;
    };
    const removeToast = (id) => {
      const index = toasts.value.findIndex((_) => _.id === id);
      if (index >= 0)
        toasts.value.splice(index, 1);
      return index >= 0;
    };
    provide(FLOWBITE_TOAST_INJECTION_KEY, {
      add: addToast,
      pop: popToast,
      remove: removeToast
    });
    return {
      toasts,
      removeToast
    };
  },
  render() {
    const {
      $props,
      $slots,
      toasts,
      removeToast
    } = this;
    return h("div", {}, [
      $slots.default ? $slots.default() : null,
      h(
        TransitionGroup,
        {
          name: $props.transition,
          tag: "div",
          class: "xl:w-1/6 md:w-1/4 sm:w-1/4 fixed top-3 right-3 flex flex-col gap-2 z-50"
        },
        {
          default: () => toasts.map(
            (_toast) => _toast.component ? h(_toast.component, {
              key: _toast.id,
              onClose: () => removeToast(_toast.id),
              ..._toast.componentProps ? _toast.componentProps : {}
            }, () => _toast.text) : h(_sfc_main$3, {
              closable: true,
              type: _toast.type,
              key: _toast.id,
              onClose: () => removeToast(_toast.id)
            }, () => _toast.text)
          )
        }
      )
    ]);
  }
});
var ToastProvider = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["__scopeId", "data-v-bd3199ec"]]);
const _sfc_main$1 = {};
const _hoisted_1$1 = /* @__PURE__ */ createElementVNode("button", {
  "data-tooltip-target": "tooltip-default",
  type: "button",
  class: "text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
}, " Default tooltip ", -1);
const _hoisted_2$1 = /* @__PURE__ */ createElementVNode("div", {
  id: "tooltip-default",
  role: "tooltip",
  class: "inline-block absolute z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm transition-opacity duration-300 tooltip dark:bg-gray-700"
}, [
  /* @__PURE__ */ createTextVNode(" Tooltip content "),
  /* @__PURE__ */ createElementVNode("div", {
    class: "tooltip-arrow",
    "data-popper-arrow": ""
  })
], -1);
const _hoisted_3$1 = [
  _hoisted_1$1,
  _hoisted_2$1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_3$1);
}
var Tooltip = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render]]);
const defaultLabelClasses = "block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300";
const defaultInputClasses = "bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
const disabledInputClasses = "cursor-not-allowed bg-gray-100";
const inputSizeClasses = {
  lg: "p-4",
  md: "p-2.5 text-sm",
  sm: "p-2 text-sm"
};
function useInputClasses(props) {
  const inputClasses = computed(() => {
    return simplifyTailwindClasses(defaultInputClasses, inputSizeClasses[props.size.value], props.disabled.value ? disabledInputClasses : "");
  });
  const labelClasses = computed(() => {
    return defaultLabelClasses;
  });
  return {
    inputClasses,
    labelClasses
  };
}
const _hoisted_1 = { class: "flex relative" };
const _hoisted_2 = {
  key: 0,
  class: "w-10 flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none overflow-hidden"
};
const _hoisted_3 = ["disabled", "type"];
const _hoisted_4 = {
  key: 1,
  class: "absolute right-2.5 bottom-2.5"
};
const _hoisted_5 = {
  key: 1,
  class: "mt-2 text-sm text-gray-500 dark:text-gray-400"
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Input",
  props: {
    label: {
      type: String,
      default: ""
    },
    disabled: {
      type: Boolean,
      default: false
    },
    type: {
      type: String,
      default: "text"
    },
    size: {
      type: String,
      default: "md"
    },
    modelValue: {
      type: String,
      default: ""
    }
  },
  setup(__props) {
    const props = __props;
    const model = useVModel(props, "modelValue");
    const { inputClasses, labelClasses } = useInputClasses(toRefs(props));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", null, [
        __props.label ? (openBlock(), createElementBlock("label", {
          key: 0,
          class: normalizeClass(unref(labelClasses))
        }, toDisplayString(__props.label), 3)) : createCommentVNode("", true),
        createElementVNode("div", _hoisted_1, [
          _ctx.$slots.prefix ? (openBlock(), createElementBlock("div", _hoisted_2, [
            renderSlot(_ctx.$slots, "prefix")
          ])) : createCommentVNode("", true),
          withDirectives(createElementVNode("input", mergeProps(_ctx.$attrs, {
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isRef(model) ? model.value = $event : null),
            disabled: __props.disabled,
            type: __props.type,
            class: [unref(inputClasses), _ctx.$slots.prefix ? "pl-10" : ""]
          }), null, 16, _hoisted_3), [
            [vModelDynamic, unref(model)]
          ]),
          _ctx.$slots.suffix ? (openBlock(), createElementBlock("div", _hoisted_4, [
            renderSlot(_ctx.$slots, "suffix")
          ])) : createCommentVNode("", true)
        ]),
        _ctx.$slots.helper ? (openBlock(), createElementBlock("p", _hoisted_5, [
          renderSlot(_ctx.$slots, "helper")
        ])) : createCommentVNode("", true)
      ]);
    };
  }
});
function useToast() {
  const injection = inject(FLOWBITE_TOAST_INJECTION_KEY, null);
  if (injection === null)
    console.warn("Cannot use useToast outside <toast-provider> component. Please wrap your component with <toast-provider>");
  const add = (toast) => {
    if (!injection)
      return "";
    return injection == null ? void 0 : injection.add(toast);
  };
  const remove = (id) => {
    if (!injection)
      return false;
    return injection == null ? void 0 : injection.remove(id);
  };
  const pop = () => {
    if (!injection)
      return "";
    return injection == null ? void 0 : injection.pop();
  };
  return {
    add,
    remove,
    pop
  };
}
export { _sfc_main$i as Accordion, _sfc_main$u as Alert, _sfc_main$l as Avatar, _sfc_main$h as Badge, _sfc_main$n as Breadcrumb, _sfc_main$m as BreadcrumbItem, _sfc_main$w as Button, ButtonGroup, _sfc_main$f as Carousel, Dropdown, _sfc_main$o as FlowbiteThemable, _sfc_main$x as FlowbiteThemableChild, _sfc_main$e as Footer, _sfc_main as Input, _sfc_main$d as ListGroup, _sfc_main$c as ListGroupItem, _sfc_main$b as Modal, _sfc_main$a as Navbar, _sfc_main$9 as Pagination, _sfc_main$8 as Progress, _sfc_main$7 as Rating, _sfc_main$6 as Sidebar, _sfc_main$q as SlotListener, _sfc_main$y as Spinner, StackedAvatars, _sfc_main$j as StackedAvatarsCounter, _sfc_main$r as Tab, _sfc_main$5 as Table, _sfc_main$s as Tabs, _sfc_main$g as TheCard, _sfc_main$4 as Timeline, _sfc_main$3 as Toast, ToastProvider, Tooltip, useToast };
